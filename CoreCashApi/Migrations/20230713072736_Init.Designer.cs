// <auto-generated />
using System;
using CoreCashApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoreCashApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230713072736_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CoreCashApi.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<int>("AccountCode")
                        .HasColumnType("int")
                        .HasColumnName("account_code");

                    b.Property<int>("AccountGroup")
                        .HasColumnType("int")
                        .HasColumnName("account_group");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("account_name");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            AccountCode = 11001,
                            AccountGroup = 11,
                            AccountName = "CASH",
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2493),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2494)
                        },
                        new
                        {
                            Id = new Guid("3e3aa53e-ca6b-41fa-801d-559f4320fc79"),
                            AccountCode = 11005,
                            AccountGroup = 11,
                            AccountName = "RECEIVABLE",
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2503),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2504)
                        },
                        new
                        {
                            Id = new Guid("d1113193-b495-413d-a710-493e463ab3a3"),
                            AccountCode = 21001,
                            AccountGroup = 21,
                            AccountName = "PAYABLE",
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2506),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2506)
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("phone_number");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("contacts");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Ledger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("account_id");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("balance");

                    b.Property<int>("Entry")
                        .HasColumnType("int")
                        .HasColumnName("entry");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("record_id");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("RecordId", "AccountId");

                    b.ToTable("ledgers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fb4c0b5e-8ce0-446c-9a47-acfcd2439d95"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 210000m,
                            Entry = 0,
                            RecordId = new Guid("a76dfb35-138b-43db-a08a-48e4562c15ec")
                        },
                        new
                        {
                            Id = new Guid("5c67f16e-0b5e-404e-bc99-2b9353c1b225"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 200000m,
                            Entry = 1,
                            RecordId = new Guid("aa776f14-bd2c-4fcd-9622-74fc49eb336d")
                        },
                        new
                        {
                            Id = new Guid("0574e523-b45e-4d84-9e3e-6b61957cbdc6"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 190000m,
                            Entry = 0,
                            RecordId = new Guid("c0bdf84b-9158-49ce-b07c-e4455ef9f6e1")
                        },
                        new
                        {
                            Id = new Guid("2e84b50d-add5-4b04-b267-f64a9b9a2c42"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 180000m,
                            Entry = 1,
                            RecordId = new Guid("8e5b1f08-dbec-4741-a3f8-641b0b08ac4f")
                        },
                        new
                        {
                            Id = new Guid("17582e87-dba2-4c23-8a89-fa8216f41aa5"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 170000m,
                            Entry = 0,
                            RecordId = new Guid("8cbf2a1a-16ca-472b-a793-2dec1fa191cd")
                        },
                        new
                        {
                            Id = new Guid("a70e347b-7c11-4976-970c-9109fc5a1750"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 160000m,
                            Entry = 1,
                            RecordId = new Guid("7bbff028-977f-48f8-8c30-a96db1a15387")
                        },
                        new
                        {
                            Id = new Guid("2a75a986-73bf-47a1-adcf-fec95d24cd84"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 150000m,
                            Entry = 0,
                            RecordId = new Guid("d5b0945f-f659-42a1-accd-0da13fdbb39f")
                        },
                        new
                        {
                            Id = new Guid("ae16c732-01fa-4ced-8fd0-f97600f89903"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 140000m,
                            Entry = 1,
                            RecordId = new Guid("ef95c3fa-9434-4219-ad71-d86b6113e222")
                        },
                        new
                        {
                            Id = new Guid("bfec407e-df4b-49d5-8a33-cb51d1a106d9"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 130000m,
                            Entry = 0,
                            RecordId = new Guid("b5a61714-5f69-4405-90da-8f76e1f792ac")
                        },
                        new
                        {
                            Id = new Guid("2c814858-827a-4d7a-bd29-7951142ac2e2"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 120000m,
                            Entry = 1,
                            RecordId = new Guid("a517378b-2526-440f-b741-49dbb8f8230b")
                        },
                        new
                        {
                            Id = new Guid("f1c71b13-345d-4f9a-a214-fd1729ea000e"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 110000m,
                            Entry = 0,
                            RecordId = new Guid("b0f3ef1e-ca2a-4b83-8d7a-a826793a77b9")
                        },
                        new
                        {
                            Id = new Guid("68817f88-2fbc-46b2-8194-6e361c15a978"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 100000m,
                            Entry = 1,
                            RecordId = new Guid("82215da8-dd5c-4021-bf8e-beec7393131f")
                        },
                        new
                        {
                            Id = new Guid("ff4e9757-83dd-4e8e-a03a-de9133e50db8"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 90000m,
                            Entry = 0,
                            RecordId = new Guid("f0afa4b8-b4bc-4fe2-ad9c-32fa47cb9804")
                        },
                        new
                        {
                            Id = new Guid("3ca24a3f-2336-4e00-ac1d-3fd2a7f5173f"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 80000m,
                            Entry = 1,
                            RecordId = new Guid("7a6ed797-2afa-4b40-87af-3c8c70f9eb13")
                        },
                        new
                        {
                            Id = new Guid("da65935a-7dc7-40ca-9196-c088d2682d57"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 70000m,
                            Entry = 0,
                            RecordId = new Guid("622b144a-b4a0-43c8-97dd-ba38ece002c3")
                        },
                        new
                        {
                            Id = new Guid("bf173ed7-1a93-435a-b09e-4ccd7b2aa749"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 60000m,
                            Entry = 1,
                            RecordId = new Guid("6ddd8b25-206c-40d1-a0ab-033f71e3d035")
                        },
                        new
                        {
                            Id = new Guid("cb12be2c-3319-4155-a1c5-74a6abf7103a"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 50000m,
                            Entry = 0,
                            RecordId = new Guid("4ff3b87a-9a4c-440f-a17d-4bc0a3a684ac")
                        },
                        new
                        {
                            Id = new Guid("bbd7d597-d00d-47fa-acb4-31c381fab703"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 40000m,
                            Entry = 1,
                            RecordId = new Guid("74f5f7b1-5acd-4f7f-b51a-36f9469babe4")
                        },
                        new
                        {
                            Id = new Guid("47d076d8-f90c-4373-ae23-d22965e26df3"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 30000m,
                            Entry = 0,
                            RecordId = new Guid("6a994aac-ead4-4772-afa3-e30a921eef66")
                        },
                        new
                        {
                            Id = new Guid("2fd4ea29-b0e7-4172-954d-2c2f1751a053"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 20000m,
                            Entry = 1,
                            RecordId = new Guid("df33c6ac-a937-41d7-a0bb-ede7ff728691")
                        },
                        new
                        {
                            Id = new Guid("08157dfc-ebdd-466f-9e7d-0d22e0cf7ee2"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 210000m,
                            Entry = 0,
                            RecordId = new Guid("7dc9110b-53f2-444b-9e2d-7b2715ac736c")
                        },
                        new
                        {
                            Id = new Guid("4638978d-b116-4212-ac1a-44882a4890ce"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 200000m,
                            Entry = 1,
                            RecordId = new Guid("c3bfb73e-cbaf-4565-a502-b7e77a8e6d59")
                        },
                        new
                        {
                            Id = new Guid("8f14bc63-77d9-4b7c-9046-9a6693ccba65"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 190000m,
                            Entry = 0,
                            RecordId = new Guid("b38feed3-6ac3-4f5f-ad86-7f260c2d37ff")
                        },
                        new
                        {
                            Id = new Guid("18890b68-4da8-4f52-a469-994ada47f318"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 180000m,
                            Entry = 1,
                            RecordId = new Guid("27ccd3f9-5822-43c2-904e-358f1a0d1334")
                        },
                        new
                        {
                            Id = new Guid("732544e3-cac5-426b-80dd-acdb8fc1efd8"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 170000m,
                            Entry = 0,
                            RecordId = new Guid("76ec51df-5c3a-4cc2-9dde-cf2a7198bbe9")
                        },
                        new
                        {
                            Id = new Guid("923a4ae1-13a3-4418-b6cd-1b716c61799d"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 160000m,
                            Entry = 1,
                            RecordId = new Guid("7675f019-49ca-45b7-9153-dcd56f3e19d7")
                        },
                        new
                        {
                            Id = new Guid("851d6406-4c0f-4f51-9b07-3416ddf4dcc5"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 150000m,
                            Entry = 0,
                            RecordId = new Guid("b2b47257-a707-4474-9b87-1a25567ae19c")
                        },
                        new
                        {
                            Id = new Guid("baaddfcb-6de5-405d-8820-24fb4a497091"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 140000m,
                            Entry = 1,
                            RecordId = new Guid("195c7e97-c6b1-4040-a5d2-d87eeaf68e15")
                        },
                        new
                        {
                            Id = new Guid("9bbdd8de-d856-437c-8327-dc198afad4f3"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 130000m,
                            Entry = 0,
                            RecordId = new Guid("c67ac942-f57c-4b47-a966-d927b29bf0ca")
                        },
                        new
                        {
                            Id = new Guid("59a13b18-3cdf-46a0-9182-ab260bc28abd"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 120000m,
                            Entry = 1,
                            RecordId = new Guid("0223711b-98b1-4db8-b740-21e733cade95")
                        },
                        new
                        {
                            Id = new Guid("d48bfd33-faaa-47dd-8d89-ad16ca51c727"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 110000m,
                            Entry = 0,
                            RecordId = new Guid("19cd1220-78ec-44cc-8c53-a26b477f7a11")
                        },
                        new
                        {
                            Id = new Guid("e17b440c-4b50-4cc0-bc52-2e7f7e995acc"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 100000m,
                            Entry = 1,
                            RecordId = new Guid("c223d8f9-d3ae-458b-8931-e856d6843dba")
                        },
                        new
                        {
                            Id = new Guid("ad81cc32-d118-4d0f-85d7-2edaf3137f87"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 90000m,
                            Entry = 0,
                            RecordId = new Guid("15488259-5e71-4e96-b78d-f0d045c40056")
                        },
                        new
                        {
                            Id = new Guid("7eccd373-e4f1-4ff8-85eb-aed091ca1bba"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 80000m,
                            Entry = 1,
                            RecordId = new Guid("cac816c5-85e4-45e6-9bb6-4e94c5dfab9b")
                        },
                        new
                        {
                            Id = new Guid("713ff017-e383-4cf7-977b-d83cc1026f53"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 70000m,
                            Entry = 0,
                            RecordId = new Guid("43044eed-5b01-4d11-bad5-9c4dfd7d8098")
                        },
                        new
                        {
                            Id = new Guid("32ee4eaf-48f2-41b6-8ce6-ba3fa33e94d1"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 60000m,
                            Entry = 1,
                            RecordId = new Guid("2822cec6-6152-48f2-b5be-c5a62034b5b5")
                        },
                        new
                        {
                            Id = new Guid("0c7266cb-1b7a-4cf3-b2c8-d0da61560d33"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 50000m,
                            Entry = 0,
                            RecordId = new Guid("6e594604-8c57-4d10-b0ff-a06c06adae37")
                        },
                        new
                        {
                            Id = new Guid("e98d621a-111d-437d-9b15-02834b2f4e46"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 40000m,
                            Entry = 1,
                            RecordId = new Guid("93e31782-09ba-40d2-a37e-9a080c8eb090")
                        },
                        new
                        {
                            Id = new Guid("eb91d20f-6047-4cc5-97d5-0fb449aa72b7"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 30000m,
                            Entry = 0,
                            RecordId = new Guid("1937e013-4399-4df5-9512-62b7f6f0efb8")
                        },
                        new
                        {
                            Id = new Guid("36a5afaa-b923-4bff-8b77-a3dc47123275"),
                            AccountId = new Guid("0352c056-b696-47ed-8a89-55cf2110dc78"),
                            Balance = 20000m,
                            Entry = 1,
                            RecordId = new Guid("59524c5e-0754-4a11-bab6-91ee8b5163e8")
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Payable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid>("DebtorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("debtor_id");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("record_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("DebtorId");

                    b.HasIndex("RecordId")
                        .IsUnique();

                    b.HasIndex("RecordId", "DebtorId");

                    b.ToTable("payables");
                });

            modelBuilder.Entity("CoreCashApi.Entities.PayableLedger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("PayableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PayableId");

                    b.HasIndex("RecordId")
                        .IsUnique();

                    b.HasIndex("RecordId", "PayableId");

                    b.ToTable("payable_ledger");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Receivable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid>("CreditorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("creditor_id");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("record_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("CreditorId");

                    b.HasIndex("RecordId")
                        .IsUnique();

                    b.HasIndex("RecordId", "CreditorId");

                    b.ToTable("receivables");
                });

            modelBuilder.Entity("CoreCashApi.Entities.ReceivableLedger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ReceivableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReceivableId")
                        .IsUnique();

                    b.HasIndex("RecordId", "ReceivableId");

                    b.ToTable("receivable_ledger");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("RecordGroup")
                        .HasColumnType("int")
                        .HasColumnName("record_group");

                    b.Property<DateTime>("RecordedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("recorded_at");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("records");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a76dfb35-138b-43db-a08a-48e4562c15ec"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2558),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2545),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2558),
                            UserId = new Guid("b08ab9f5-41ac-4253-8b02-e2eeaa1ef45e")
                        },
                        new
                        {
                            Id = new Guid("aa776f14-bd2c-4fcd-9622-74fc49eb336d"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2566),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2566),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2567),
                            UserId = new Guid("b08ab9f5-41ac-4253-8b02-e2eeaa1ef45e")
                        },
                        new
                        {
                            Id = new Guid("c0bdf84b-9158-49ce-b07c-e4455ef9f6e1"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2569),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2569),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2570),
                            UserId = new Guid("b08ab9f5-41ac-4253-8b02-e2eeaa1ef45e")
                        },
                        new
                        {
                            Id = new Guid("8e5b1f08-dbec-4741-a3f8-641b0b08ac4f"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2575),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2575),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2576),
                            UserId = new Guid("b08ab9f5-41ac-4253-8b02-e2eeaa1ef45e")
                        },
                        new
                        {
                            Id = new Guid("8cbf2a1a-16ca-472b-a793-2dec1fa191cd"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2579),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2578),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2579),
                            UserId = new Guid("b08ab9f5-41ac-4253-8b02-e2eeaa1ef45e")
                        },
                        new
                        {
                            Id = new Guid("7bbff028-977f-48f8-8c30-a96db1a15387"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2582),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2581),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2582),
                            UserId = new Guid("b08ab9f5-41ac-4253-8b02-e2eeaa1ef45e")
                        },
                        new
                        {
                            Id = new Guid("d5b0945f-f659-42a1-accd-0da13fdbb39f"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2585),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2584),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2585),
                            UserId = new Guid("b08ab9f5-41ac-4253-8b02-e2eeaa1ef45e")
                        },
                        new
                        {
                            Id = new Guid("ef95c3fa-9434-4219-ad71-d86b6113e222"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2590),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2589),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2590),
                            UserId = new Guid("b08ab9f5-41ac-4253-8b02-e2eeaa1ef45e")
                        },
                        new
                        {
                            Id = new Guid("b5a61714-5f69-4405-90da-8f76e1f792ac"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2592),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2592),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2593),
                            UserId = new Guid("b08ab9f5-41ac-4253-8b02-e2eeaa1ef45e")
                        },
                        new
                        {
                            Id = new Guid("a517378b-2526-440f-b741-49dbb8f8230b"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2595),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2595),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2595),
                            UserId = new Guid("b08ab9f5-41ac-4253-8b02-e2eeaa1ef45e")
                        },
                        new
                        {
                            Id = new Guid("b0f3ef1e-ca2a-4b83-8d7a-a826793a77b9"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2598),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2598),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2598),
                            UserId = new Guid("b08ab9f5-41ac-4253-8b02-e2eeaa1ef45e")
                        },
                        new
                        {
                            Id = new Guid("82215da8-dd5c-4021-bf8e-beec7393131f"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2603),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2602),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2603),
                            UserId = new Guid("b08ab9f5-41ac-4253-8b02-e2eeaa1ef45e")
                        },
                        new
                        {
                            Id = new Guid("f0afa4b8-b4bc-4fe2-ad9c-32fa47cb9804"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2605),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2605),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2606),
                            UserId = new Guid("b08ab9f5-41ac-4253-8b02-e2eeaa1ef45e")
                        },
                        new
                        {
                            Id = new Guid("7a6ed797-2afa-4b40-87af-3c8c70f9eb13"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2608),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2608),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2609),
                            UserId = new Guid("b08ab9f5-41ac-4253-8b02-e2eeaa1ef45e")
                        },
                        new
                        {
                            Id = new Guid("622b144a-b4a0-43c8-97dd-ba38ece002c3"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2611),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2611),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2611),
                            UserId = new Guid("b08ab9f5-41ac-4253-8b02-e2eeaa1ef45e")
                        },
                        new
                        {
                            Id = new Guid("6ddd8b25-206c-40d1-a0ab-033f71e3d035"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2616),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2615),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2616),
                            UserId = new Guid("b08ab9f5-41ac-4253-8b02-e2eeaa1ef45e")
                        },
                        new
                        {
                            Id = new Guid("4ff3b87a-9a4c-440f-a17d-4bc0a3a684ac"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2618),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2618),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2619),
                            UserId = new Guid("b08ab9f5-41ac-4253-8b02-e2eeaa1ef45e")
                        },
                        new
                        {
                            Id = new Guid("74f5f7b1-5acd-4f7f-b51a-36f9469babe4"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2621),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2621),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2621),
                            UserId = new Guid("b08ab9f5-41ac-4253-8b02-e2eeaa1ef45e")
                        },
                        new
                        {
                            Id = new Guid("6a994aac-ead4-4772-afa3-e30a921eef66"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2624),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2623),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2624),
                            UserId = new Guid("b08ab9f5-41ac-4253-8b02-e2eeaa1ef45e")
                        },
                        new
                        {
                            Id = new Guid("df33c6ac-a937-41d7-a0bb-ede7ff728691"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2628),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2628),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2629),
                            UserId = new Guid("b08ab9f5-41ac-4253-8b02-e2eeaa1ef45e")
                        },
                        new
                        {
                            Id = new Guid("7dc9110b-53f2-444b-9e2d-7b2715ac736c"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2696),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2695),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2696),
                            UserId = new Guid("6223ba12-2632-4398-a238-c101527076ce")
                        },
                        new
                        {
                            Id = new Guid("c3bfb73e-cbaf-4565-a502-b7e77a8e6d59"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2699),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2698),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2700),
                            UserId = new Guid("6223ba12-2632-4398-a238-c101527076ce")
                        },
                        new
                        {
                            Id = new Guid("b38feed3-6ac3-4f5f-ad86-7f260c2d37ff"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2702),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2702),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2702),
                            UserId = new Guid("6223ba12-2632-4398-a238-c101527076ce")
                        },
                        new
                        {
                            Id = new Guid("27ccd3f9-5822-43c2-904e-358f1a0d1334"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2707),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2706),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2707),
                            UserId = new Guid("6223ba12-2632-4398-a238-c101527076ce")
                        },
                        new
                        {
                            Id = new Guid("76ec51df-5c3a-4cc2-9dde-cf2a7198bbe9"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2710),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2709),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2710),
                            UserId = new Guid("6223ba12-2632-4398-a238-c101527076ce")
                        },
                        new
                        {
                            Id = new Guid("7675f019-49ca-45b7-9153-dcd56f3e19d7"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2712),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2712),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2712),
                            UserId = new Guid("6223ba12-2632-4398-a238-c101527076ce")
                        },
                        new
                        {
                            Id = new Guid("b2b47257-a707-4474-9b87-1a25567ae19c"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2715),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2714),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2715),
                            UserId = new Guid("6223ba12-2632-4398-a238-c101527076ce")
                        },
                        new
                        {
                            Id = new Guid("195c7e97-c6b1-4040-a5d2-d87eeaf68e15"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2719),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2719),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2720),
                            UserId = new Guid("6223ba12-2632-4398-a238-c101527076ce")
                        },
                        new
                        {
                            Id = new Guid("c67ac942-f57c-4b47-a966-d927b29bf0ca"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2722),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2722),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2722),
                            UserId = new Guid("6223ba12-2632-4398-a238-c101527076ce")
                        },
                        new
                        {
                            Id = new Guid("0223711b-98b1-4db8-b740-21e733cade95"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2725),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2724),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2725),
                            UserId = new Guid("6223ba12-2632-4398-a238-c101527076ce")
                        },
                        new
                        {
                            Id = new Guid("19cd1220-78ec-44cc-8c53-a26b477f7a11"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2727),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2727),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2728),
                            UserId = new Guid("6223ba12-2632-4398-a238-c101527076ce")
                        },
                        new
                        {
                            Id = new Guid("c223d8f9-d3ae-458b-8931-e856d6843dba"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2732),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2732),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2732),
                            UserId = new Guid("6223ba12-2632-4398-a238-c101527076ce")
                        },
                        new
                        {
                            Id = new Guid("15488259-5e71-4e96-b78d-f0d045c40056"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2735),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2734),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2735),
                            UserId = new Guid("6223ba12-2632-4398-a238-c101527076ce")
                        },
                        new
                        {
                            Id = new Guid("cac816c5-85e4-45e6-9bb6-4e94c5dfab9b"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2737),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2737),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2738),
                            UserId = new Guid("6223ba12-2632-4398-a238-c101527076ce")
                        },
                        new
                        {
                            Id = new Guid("43044eed-5b01-4d11-bad5-9c4dfd7d8098"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2740),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2740),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2740),
                            UserId = new Guid("6223ba12-2632-4398-a238-c101527076ce")
                        },
                        new
                        {
                            Id = new Guid("2822cec6-6152-48f2-b5be-c5a62034b5b5"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2745),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2744),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2745),
                            UserId = new Guid("6223ba12-2632-4398-a238-c101527076ce")
                        },
                        new
                        {
                            Id = new Guid("6e594604-8c57-4d10-b0ff-a06c06adae37"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2748),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2747),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2748),
                            UserId = new Guid("6223ba12-2632-4398-a238-c101527076ce")
                        },
                        new
                        {
                            Id = new Guid("93e31782-09ba-40d2-a37e-9a080c8eb090"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2750),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2750),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2751),
                            UserId = new Guid("6223ba12-2632-4398-a238-c101527076ce")
                        },
                        new
                        {
                            Id = new Guid("1937e013-4399-4df5-9512-62b7f6f0efb8"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2753),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2752),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2753),
                            UserId = new Guid("6223ba12-2632-4398-a238-c101527076ce")
                        },
                        new
                        {
                            Id = new Guid("59524c5e-0754-4a11-bab6-91ee8b5163e8"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2758),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 14, 27, 36, 360, DateTimeKind.Local).AddTicks(2757),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2758),
                            UserId = new Guid("6223ba12-2632-4398-a238-c101527076ce")
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a21496c5-cb61-4821-ab99-e5173fbf6898"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(1368),
                            Name = "ROLE_ADMIN",
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(1371)
                        },
                        new
                        {
                            Id = new Guid("2f9ab61a-c93c-42ce-addf-100426d585a7"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(1408),
                            Name = "ROLE_USER",
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(1408)
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("full_name");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("password_hash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("password_salt");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("profile_picture");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("refresh_token");

                    b.Property<string>("ResetPasswordToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("reset_password_token");

                    b.Property<DateTime>("ResetTokenExpires")
                        .HasColumnType("datetime2")
                        .HasColumnName("reset_token_expires");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("role_id");

                    b.Property<DateTime>("TokenExpires")
                        .HasColumnType("datetime2")
                        .HasColumnName("token_expires");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("VerificationToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("verification_token");

                    b.Property<DateTime>("VerifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("verified_at");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("47a0904d-c49e-40fc-9090-4b0718c6fa57"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2399),
                            Email = "admin1@example.com",
                            FullName = "Admin Satu",
                            PasswordHash = new byte[] { 165, 92, 223, 219, 34, 129, 153, 220, 56, 153, 117, 169, 33, 39, 71, 230, 115, 136, 185, 187, 40, 151, 150, 145, 250, 123, 146, 147, 55, 24, 35, 25 },
                            PasswordSalt = new byte[] { 71, 65, 120, 139, 188, 117, 54, 250, 48, 20, 67, 255, 181, 111, 28, 143, 250, 36, 111, 194, 117, 8, 173, 225, 137, 171, 43, 25, 11, 204, 67, 42, 99, 179, 203, 237, 219, 244, 214, 16, 49, 104, 70, 160, 4, 202, 17, 252, 228, 136, 253, 245, 149, 118, 200, 181, 103, 27, 240, 29, 111, 83, 20, 186 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("a21496c5-cb61-4821-ab99-e5173fbf6898"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2399),
                            VerifiedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2398)
                        },
                        new
                        {
                            Id = new Guid("a24439a4-d594-4284-b9a5-13b4d143f3cc"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2402),
                            Email = "admin2@example.com",
                            FullName = "Admin Dua",
                            PasswordHash = new byte[] { 165, 92, 223, 219, 34, 129, 153, 220, 56, 153, 117, 169, 33, 39, 71, 230, 115, 136, 185, 187, 40, 151, 150, 145, 250, 123, 146, 147, 55, 24, 35, 25 },
                            PasswordSalt = new byte[] { 71, 65, 120, 139, 188, 117, 54, 250, 48, 20, 67, 255, 181, 111, 28, 143, 250, 36, 111, 194, 117, 8, 173, 225, 137, 171, 43, 25, 11, 204, 67, 42, 99, 179, 203, 237, 219, 244, 214, 16, 49, 104, 70, 160, 4, 202, 17, 252, 228, 136, 253, 245, 149, 118, 200, 181, 103, 27, 240, 29, 111, 83, 20, 186 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("a21496c5-cb61-4821-ab99-e5173fbf6898"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2403),
                            VerifiedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2402)
                        },
                        new
                        {
                            Id = new Guid("b08ab9f5-41ac-4253-8b02-e2eeaa1ef45e"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2405),
                            Email = "user1@example.com",
                            FullName = "User Satu",
                            PasswordHash = new byte[] { 165, 92, 223, 219, 34, 129, 153, 220, 56, 153, 117, 169, 33, 39, 71, 230, 115, 136, 185, 187, 40, 151, 150, 145, 250, 123, 146, 147, 55, 24, 35, 25 },
                            PasswordSalt = new byte[] { 71, 65, 120, 139, 188, 117, 54, 250, 48, 20, 67, 255, 181, 111, 28, 143, 250, 36, 111, 194, 117, 8, 173, 225, 137, 171, 43, 25, 11, 204, 67, 42, 99, 179, 203, 237, 219, 244, 214, 16, 49, 104, 70, 160, 4, 202, 17, 252, 228, 136, 253, 245, 149, 118, 200, 181, 103, 27, 240, 29, 111, 83, 20, 186 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("2f9ab61a-c93c-42ce-addf-100426d585a7"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2406),
                            VerifiedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2405)
                        },
                        new
                        {
                            Id = new Guid("6223ba12-2632-4398-a238-c101527076ce"),
                            CreatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2408),
                            Email = "user2@example.com",
                            FullName = "User Dua",
                            PasswordHash = new byte[] { 165, 92, 223, 219, 34, 129, 153, 220, 56, 153, 117, 169, 33, 39, 71, 230, 115, 136, 185, 187, 40, 151, 150, 145, 250, 123, 146, 147, 55, 24, 35, 25 },
                            PasswordSalt = new byte[] { 71, 65, 120, 139, 188, 117, 54, 250, 48, 20, 67, 255, 181, 111, 28, 143, 250, 36, 111, 194, 117, 8, 173, 225, 137, 171, 43, 25, 11, 204, 67, 42, 99, 179, 203, 237, 219, 244, 214, 16, 49, 104, 70, 160, 4, 202, 17, 252, 228, 136, 253, 245, 149, 118, 200, 181, 103, 27, 240, 29, 111, 83, 20, 186 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("2f9ab61a-c93c-42ce-addf-100426d585a7"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2408),
                            VerifiedAt = new DateTime(2023, 7, 13, 7, 27, 36, 360, DateTimeKind.Utc).AddTicks(2408)
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Ledger", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Account", "Account")
                        .WithMany("Ledgers")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithMany("Ledgers")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Payable", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Contact", "Debtor")
                        .WithMany("Payables")
                        .HasForeignKey("DebtorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithOne("Payable")
                        .HasForeignKey("CoreCashApi.Entities.Payable", "RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Debtor");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.PayableLedger", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Payable", "Payable")
                        .WithMany("PayableLedgers")
                        .HasForeignKey("PayableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithOne("PayableLedger")
                        .HasForeignKey("CoreCashApi.Entities.PayableLedger", "RecordId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Payable");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Receivable", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Contact", "Creditor")
                        .WithMany("Receivables")
                        .HasForeignKey("CreditorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithOne("Receivable")
                        .HasForeignKey("CoreCashApi.Entities.Receivable", "RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creditor");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.ReceivableLedger", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Receivable", "Receivable")
                        .WithMany("ReceivableLedgers")
                        .HasForeignKey("ReceivableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithOne("ReceivableLedger")
                        .HasForeignKey("CoreCashApi.Entities.ReceivableLedger", "ReceivableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Receivable");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Record", b =>
                {
                    b.HasOne("CoreCashApi.Entities.User", "User")
                        .WithMany("Records")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoreCashApi.Entities.User", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Account", b =>
                {
                    b.Navigation("Ledgers");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Contact", b =>
                {
                    b.Navigation("Payables");

                    b.Navigation("Receivables");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Payable", b =>
                {
                    b.Navigation("PayableLedgers");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Receivable", b =>
                {
                    b.Navigation("ReceivableLedgers");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Record", b =>
                {
                    b.Navigation("Ledgers");

                    b.Navigation("Payable");

                    b.Navigation("PayableLedger");

                    b.Navigation("Receivable");

                    b.Navigation("ReceivableLedger");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CoreCashApi.Entities.User", b =>
                {
                    b.Navigation("Records");
                });
#pragma warning restore 612, 618
        }
    }
}
