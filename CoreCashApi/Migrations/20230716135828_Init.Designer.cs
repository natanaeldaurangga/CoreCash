// <auto-generated />
using System;
using CoreCashApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoreCashApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230716135828_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CoreCashApi.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<int>("AccountCode")
                        .HasColumnType("int")
                        .HasColumnName("account_code");

                    b.Property<int>("AccountGroup")
                        .HasColumnType("int")
                        .HasColumnName("account_group");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("account_name");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            AccountCode = 11001,
                            AccountGroup = 11,
                            AccountName = "CASH",
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5251),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5251)
                        },
                        new
                        {
                            Id = new Guid("65352e5e-3182-414f-b1fa-d091bf617726"),
                            AccountCode = 11005,
                            AccountGroup = 11,
                            AccountName = "RECEIVABLE",
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5254),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5254)
                        },
                        new
                        {
                            Id = new Guid("21725d6b-80d2-4248-bef3-574dc7a76c73"),
                            AccountCode = 21001,
                            AccountGroup = 21,
                            AccountName = "PAYABLE",
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5255),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5256)
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("phone_number");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("UserId");

                    b.ToTable("contacts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("66b478ba-6b5f-40ca-b702-c4c987be57c4"),
                            Address = "620 Lakeland Center",
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5569),
                            Email = "rhavock0@gov.uk",
                            Name = "Randell Havock",
                            PhoneNumber = "6765109874",
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5569),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("adbe26da-b9e9-4397-a08f-fb55fa52beca"),
                            Address = "34 Eastwood Avenue",
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5572),
                            Email = "smahood1@wufoo.com",
                            Name = "Sarine Mahood",
                            PhoneNumber = "6977095403",
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5572),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("949cc9c6-bbcd-4b7f-b3e1-f83ce8106116"),
                            Address = "17 Onsgard Avenue",
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5574),
                            Email = "bmcging2@ihg.com",
                            Name = "Benjie McGing",
                            PhoneNumber = "5025308916",
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5574),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("14610336-e056-443a-aef8-3785990f0c84"),
                            Address = "96 Summerview Drive",
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5576),
                            Email = "klanphere3@upenn.edu",
                            Name = "Kev Lanphere",
                            PhoneNumber = "7268834724",
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5576),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("a34fecda-ca26-4bd2-817e-2f5f848372e9"),
                            Address = "39494 Kartens Terrace",
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5577),
                            Email = "sblanchard4@vinaora.com",
                            Name = "Sal Blanchard",
                            PhoneNumber = "4904310249",
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5578),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("3ca980b0-0a5c-436d-8a1d-57fc0ae432db"),
                            Address = "615 Jenifer Alley",
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5582),
                            Email = "ldunster5@marketwatch.com",
                            Name = "Laurette Dunster",
                            PhoneNumber = "7678939672",
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5582),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("c565453b-8a6a-4228-808a-fd880a69e6a6"),
                            Address = "4649 Swallow Trail",
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5583),
                            Email = "tshew6@tripadvisor.com",
                            Name = "Tiphany Shew",
                            PhoneNumber = "1457940882",
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5584),
                            UserId = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a")
                        },
                        new
                        {
                            Id = new Guid("1dfd04ed-bb84-45e5-bca1-85109082d780"),
                            Address = "10 Calypso Center",
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5585),
                            Email = "candrelli7@intel.com",
                            Name = "Ceil Andrelli",
                            PhoneNumber = "1401949061",
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5585),
                            UserId = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a")
                        },
                        new
                        {
                            Id = new Guid("f40f8dd6-cde3-4e1f-8aec-38c975fe0c07"),
                            Address = "11 Old Shore Terrace",
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5587),
                            Email = "msivorn8@icq.com",
                            Name = "Margaretta Sivorn",
                            PhoneNumber = "5311644464",
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5587),
                            UserId = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a")
                        },
                        new
                        {
                            Id = new Guid("139796f6-c463-48df-83e0-676251f2a2fd"),
                            Address = "4330 Doe Crossing Junction",
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5588),
                            Email = "vwoodsford9@issuu.com",
                            Name = "Vasilis Woodsford",
                            PhoneNumber = "8364764344",
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5589),
                            UserId = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a")
                        },
                        new
                        {
                            Id = new Guid("190aa137-ab44-43bd-8051-97d3f5cc2d97"),
                            Address = "54 Redwing Drive",
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5590),
                            Email = "jorneblowa@youtube.com",
                            Name = "Jennee Orneblow",
                            PhoneNumber = "9316403125",
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5590),
                            UserId = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a")
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Ledger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("account_id");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("balance");

                    b.Property<int>("Entry")
                        .HasColumnType("int")
                        .HasColumnName("entry");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("record_id");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("RecordId", "AccountId");

                    b.ToTable("ledgers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e980c55a-6b6f-48b0-9371-61572e73c7f4"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 210000m,
                            Entry = 0,
                            RecordId = new Guid("c1de93d8-bc37-43e0-b7f0-25f8c753a4bf")
                        },
                        new
                        {
                            Id = new Guid("6e72afb2-d38a-4a7c-a5da-067c690f3c9c"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 200000m,
                            Entry = 1,
                            RecordId = new Guid("529c82ff-e104-4247-a0a6-10493b2eb829")
                        },
                        new
                        {
                            Id = new Guid("afca9287-bf39-4f4e-a525-244aa796f5a9"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 190000m,
                            Entry = 0,
                            RecordId = new Guid("ec24ae22-9af7-42f0-8a8d-44ae0e861d97")
                        },
                        new
                        {
                            Id = new Guid("f257613a-742c-4b2d-9482-6bd62cdb08ba"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 180000m,
                            Entry = 1,
                            RecordId = new Guid("b537d3ac-09c9-4f00-8d0b-537ec398bc7f")
                        },
                        new
                        {
                            Id = new Guid("1993bb14-bdba-4bee-be52-e0503d381954"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 170000m,
                            Entry = 0,
                            RecordId = new Guid("494581bd-c6e7-4f77-a3ef-d4063969ffc7")
                        },
                        new
                        {
                            Id = new Guid("6d0ec5c6-d49a-4520-9fa5-dd598ee82f1f"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 160000m,
                            Entry = 1,
                            RecordId = new Guid("3a1abe5d-2aa9-4029-a4fa-525320b9d182")
                        },
                        new
                        {
                            Id = new Guid("20bd01ea-a750-44fc-9dc9-e9d45e259c07"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 150000m,
                            Entry = 0,
                            RecordId = new Guid("36218657-1c1c-4784-874c-32906046c523")
                        },
                        new
                        {
                            Id = new Guid("89c65e0e-a7d3-49cd-88e3-8e84be9cfeff"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 140000m,
                            Entry = 1,
                            RecordId = new Guid("130644fa-f07b-4597-ab12-eaa561b323d5")
                        },
                        new
                        {
                            Id = new Guid("d9d97307-5aab-47ba-8a8b-c200ff26d39b"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 130000m,
                            Entry = 0,
                            RecordId = new Guid("0a32c82e-6a2a-4c2a-97bd-6a24a1635570")
                        },
                        new
                        {
                            Id = new Guid("5ed83654-9175-4d24-bbae-0cacbe4c48a5"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 120000m,
                            Entry = 1,
                            RecordId = new Guid("b2ff0829-a05a-4986-8e61-e1ac9e06cbc8")
                        },
                        new
                        {
                            Id = new Guid("527b4ed0-7a32-459e-8b9b-06c907634275"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 110000m,
                            Entry = 0,
                            RecordId = new Guid("3009dac3-69e7-4a15-95ca-de29697cbb77")
                        },
                        new
                        {
                            Id = new Guid("474a4f8a-4c5a-45b6-9dcd-c4d775b93a98"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 100000m,
                            Entry = 1,
                            RecordId = new Guid("647567e3-75ec-4e98-a8a0-95114546f356")
                        },
                        new
                        {
                            Id = new Guid("394c82db-a490-4b69-9a58-59e38f8a6b1d"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 90000m,
                            Entry = 0,
                            RecordId = new Guid("f27baaba-059d-42b5-af71-524c8dc95b3a")
                        },
                        new
                        {
                            Id = new Guid("44c33a15-e437-44aa-9779-040865d01e25"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 80000m,
                            Entry = 1,
                            RecordId = new Guid("daf6c2d2-5da1-407d-a8f2-6c4d5cece308")
                        },
                        new
                        {
                            Id = new Guid("065270d5-a3d6-4296-aaac-2f0f9b4fae71"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 70000m,
                            Entry = 0,
                            RecordId = new Guid("66e490f5-6455-4686-b3dc-4029beff0149")
                        },
                        new
                        {
                            Id = new Guid("8d3a5a15-b368-455f-aff1-2b274629244d"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 60000m,
                            Entry = 1,
                            RecordId = new Guid("db8bf679-08a0-4126-bcf2-50118a09b2e6")
                        },
                        new
                        {
                            Id = new Guid("55feb9cf-a204-4388-a025-d0899c1a8f5c"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 50000m,
                            Entry = 0,
                            RecordId = new Guid("cf343d99-a81f-48aa-8e8d-110999f094d9")
                        },
                        new
                        {
                            Id = new Guid("b4b2a218-0502-4359-88f1-bd6f1e467a0c"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 40000m,
                            Entry = 1,
                            RecordId = new Guid("4006c79d-6fb6-4107-a68f-7ee1996567e1")
                        },
                        new
                        {
                            Id = new Guid("7328079a-eee1-40bc-b55c-0d7d49a835a7"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 30000m,
                            Entry = 0,
                            RecordId = new Guid("a5d505bc-03f1-4697-a9c8-447ccfa9c5ef")
                        },
                        new
                        {
                            Id = new Guid("cf0326f5-37de-4ac2-9b1a-1008b93eba24"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 20000m,
                            Entry = 1,
                            RecordId = new Guid("24f44f19-df8f-487d-a4f3-287112fe4d18")
                        },
                        new
                        {
                            Id = new Guid("ad856580-f4dc-46a9-9efb-5931a2aecb0d"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 210000m,
                            Entry = 0,
                            RecordId = new Guid("13c0e408-7231-4ac4-8368-645282655e71")
                        },
                        new
                        {
                            Id = new Guid("24419a46-9c4b-4452-b861-a42089f020ec"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 200000m,
                            Entry = 1,
                            RecordId = new Guid("76ea028b-76d3-43e8-a878-f7372ccb4634")
                        },
                        new
                        {
                            Id = new Guid("12ebf6fa-b264-4c25-94f0-3e612843fd01"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 190000m,
                            Entry = 0,
                            RecordId = new Guid("221af0ae-469e-4a6a-a6c4-d10825abc8ab")
                        },
                        new
                        {
                            Id = new Guid("d9c4bdfb-32e0-4773-9434-845f549c8458"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 180000m,
                            Entry = 1,
                            RecordId = new Guid("b845117e-29e8-4e6e-9323-e7cf61b58ae9")
                        },
                        new
                        {
                            Id = new Guid("a0ac3af8-93b0-4270-ac9b-5de945b2b7ed"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 170000m,
                            Entry = 0,
                            RecordId = new Guid("8dd53680-ae87-49ae-a7ff-522309065bc8")
                        },
                        new
                        {
                            Id = new Guid("00e18ee6-c850-4acf-b72a-b1a252403f43"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 160000m,
                            Entry = 1,
                            RecordId = new Guid("2cfb2469-e6fd-4d65-98e4-452a8be39bd2")
                        },
                        new
                        {
                            Id = new Guid("039d86b9-d9d3-41ae-8b32-1ff7a25f2e57"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 150000m,
                            Entry = 0,
                            RecordId = new Guid("59e9d463-8127-4709-b125-0de16ce0dda5")
                        },
                        new
                        {
                            Id = new Guid("129cc393-a960-424a-af9c-0b558d95d285"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 140000m,
                            Entry = 1,
                            RecordId = new Guid("c82f7dc5-1046-47d4-a4a6-812477dfd2f3")
                        },
                        new
                        {
                            Id = new Guid("4a97d899-a02f-4143-b073-61bb468e9c54"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 130000m,
                            Entry = 0,
                            RecordId = new Guid("fd8365ce-2e45-4378-878d-047e3bd41c77")
                        },
                        new
                        {
                            Id = new Guid("19779711-4343-4b33-a5a2-453e8fadbb8c"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 120000m,
                            Entry = 1,
                            RecordId = new Guid("c399d5bb-8c00-4f49-a179-91f0042e351e")
                        },
                        new
                        {
                            Id = new Guid("1288ef9f-8711-406f-91d5-436f7cf1724d"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 110000m,
                            Entry = 0,
                            RecordId = new Guid("a5038fe2-d86e-4fe9-8717-521648c7c2ae")
                        },
                        new
                        {
                            Id = new Guid("1fe80eb6-23b6-499f-a56e-5c62ac40980e"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 100000m,
                            Entry = 1,
                            RecordId = new Guid("71d480bf-8203-4ddf-a7d0-9358bb536706")
                        },
                        new
                        {
                            Id = new Guid("3d4e33d6-6386-43ac-955e-a20b5574ac4d"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 90000m,
                            Entry = 0,
                            RecordId = new Guid("2ae825c3-52dd-4475-acd6-4b86df2f62ed")
                        },
                        new
                        {
                            Id = new Guid("d0781fa1-5eee-4a17-bdc6-d975889a3d83"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 80000m,
                            Entry = 1,
                            RecordId = new Guid("b1668541-9036-4905-b3ac-1eed7ab6c115")
                        },
                        new
                        {
                            Id = new Guid("a6e896e3-99fd-4e9b-a043-1e925cd91812"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 70000m,
                            Entry = 0,
                            RecordId = new Guid("6f627c3d-13d7-4a1d-b70f-352eed59005b")
                        },
                        new
                        {
                            Id = new Guid("0f21238e-c580-4ee5-bb28-4aa64cc85583"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 60000m,
                            Entry = 1,
                            RecordId = new Guid("ae0cc123-f484-421f-bd6b-6c21af6cda2c")
                        },
                        new
                        {
                            Id = new Guid("d9d4b824-3661-401c-bc3d-4b023569b875"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 50000m,
                            Entry = 0,
                            RecordId = new Guid("9dfb521a-f691-4dd3-a19b-5165a0f9e31d")
                        },
                        new
                        {
                            Id = new Guid("91c6277f-91f1-4575-8a98-cffc4f815e6e"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 40000m,
                            Entry = 1,
                            RecordId = new Guid("9e230e26-894d-413b-970f-ee5cd3fe4b2d")
                        },
                        new
                        {
                            Id = new Guid("30de2ad3-0db5-42fc-9b7b-4a68c8c0eb7f"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 30000m,
                            Entry = 0,
                            RecordId = new Guid("026c1e95-237a-4032-bdee-d930d57dc92d")
                        },
                        new
                        {
                            Id = new Guid("b1672e55-e212-4eca-8118-1749f58703a4"),
                            AccountId = new Guid("d9aeda2d-9c6c-432e-b011-dfaec955bb14"),
                            Balance = 20000m,
                            Entry = 1,
                            RecordId = new Guid("cbebe4d6-1661-46e6-8a39-e1d2d0378a28")
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Payable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid>("CreditorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("creditor_id");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("record_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("CreditorId");

                    b.HasIndex("RecordId")
                        .IsUnique();

                    b.HasIndex("RecordId", "CreditorId");

                    b.ToTable("payables");
                });

            modelBuilder.Entity("CoreCashApi.Entities.PayableLedger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("PayableId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("payable_id");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("record_id");

                    b.HasKey("Id");

                    b.HasIndex("PayableId");

                    b.HasIndex("RecordId")
                        .IsUnique();

                    b.HasIndex("RecordId", "PayableId");

                    b.ToTable("payable_ledger");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Receivable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid>("DebtorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("debtor_id");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("record_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("DebtorId");

                    b.HasIndex("RecordId")
                        .IsUnique();

                    b.HasIndex("RecordId", "DebtorId");

                    b.ToTable("receivables");
                });

            modelBuilder.Entity("CoreCashApi.Entities.ReceivableLedger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ReceivableId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("receivable_id");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("record_id");

                    b.HasKey("Id");

                    b.HasIndex("ReceivableId");

                    b.HasIndex("RecordId")
                        .IsUnique();

                    b.HasIndex("RecordId", "ReceivableId");

                    b.ToTable("receivable_ledger");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("RecordGroup")
                        .HasColumnType("int")
                        .HasColumnName("record_group");

                    b.Property<DateTime>("RecordedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("recorded_at");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("records");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c1de93d8-bc37-43e0-b7f0-25f8c753a4bf"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5293),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5282),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5293),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("529c82ff-e104-4247-a0a6-10493b2eb829"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5301),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5300),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5301),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("ec24ae22-9af7-42f0-8a8d-44ae0e861d97"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5307),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5306),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5307),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("b537d3ac-09c9-4f00-8d0b-537ec398bc7f"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5310),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5309),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5310),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("494581bd-c6e7-4f77-a3ef-d4063969ffc7"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5313),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5313),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5313),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("3a1abe5d-2aa9-4029-a4fa-525320b9d182"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5316),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5315),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5316),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("36218657-1c1c-4784-874c-32906046c523"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5358),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5358),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5359),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("130644fa-f07b-4597-ab12-eaa561b323d5"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5362),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5361),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5362),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("0a32c82e-6a2a-4c2a-97bd-6a24a1635570"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5365),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5364),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5365),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("b2ff0829-a05a-4986-8e61-e1ac9e06cbc8"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5368),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5367),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5368),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("3009dac3-69e7-4a15-95ca-de29697cbb77"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5373),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5372),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5373),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("647567e3-75ec-4e98-a8a0-95114546f356"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5375),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5375),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5376),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("f27baaba-059d-42b5-af71-524c8dc95b3a"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5378),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5378),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5378),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("daf6c2d2-5da1-407d-a8f2-6c4d5cece308"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5381),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5380),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5381),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("66e490f5-6455-4686-b3dc-4029beff0149"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5386),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5385),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5386),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("db8bf679-08a0-4126-bcf2-50118a09b2e6"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5388),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5388),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5389),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("cf343d99-a81f-48aa-8e8d-110999f094d9"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5392),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5391),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5392),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("4006c79d-6fb6-4107-a68f-7ee1996567e1"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5395),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5394),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5395),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("a5d505bc-03f1-4697-a9c8-447ccfa9c5ef"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5399),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5399),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5400),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("24f44f19-df8f-487d-a4f3-287112fe4d18"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5402),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5402),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5402),
                            UserId = new Guid("af546513-ee69-4cde-8849-ba88d4b93070")
                        },
                        new
                        {
                            Id = new Guid("13c0e408-7231-4ac4-8368-645282655e71"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5447),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5446),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5447),
                            UserId = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a")
                        },
                        new
                        {
                            Id = new Guid("76ea028b-76d3-43e8-a878-f7372ccb4634"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5450),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5450),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5451),
                            UserId = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a")
                        },
                        new
                        {
                            Id = new Guid("221af0ae-469e-4a6a-a6c4-d10825abc8ab"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5456),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5455),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5456),
                            UserId = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a")
                        },
                        new
                        {
                            Id = new Guid("b845117e-29e8-4e6e-9323-e7cf61b58ae9"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5459),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5458),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5459),
                            UserId = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a")
                        },
                        new
                        {
                            Id = new Guid("8dd53680-ae87-49ae-a7ff-522309065bc8"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5462),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5461),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5462),
                            UserId = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a")
                        },
                        new
                        {
                            Id = new Guid("2cfb2469-e6fd-4d65-98e4-452a8be39bd2"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5464),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5464),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5465),
                            UserId = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a")
                        },
                        new
                        {
                            Id = new Guid("59e9d463-8127-4709-b125-0de16ce0dda5"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5469),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5469),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5469),
                            UserId = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a")
                        },
                        new
                        {
                            Id = new Guid("c82f7dc5-1046-47d4-a4a6-812477dfd2f3"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5472),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5471),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5472),
                            UserId = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a")
                        },
                        new
                        {
                            Id = new Guid("fd8365ce-2e45-4378-878d-047e3bd41c77"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5475),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5475),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5475),
                            UserId = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a")
                        },
                        new
                        {
                            Id = new Guid("c399d5bb-8c00-4f49-a179-91f0042e351e"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5478),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5477),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5478),
                            UserId = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a")
                        },
                        new
                        {
                            Id = new Guid("a5038fe2-d86e-4fe9-8717-521648c7c2ae"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5507),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5506),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5507),
                            UserId = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a")
                        },
                        new
                        {
                            Id = new Guid("71d480bf-8203-4ddf-a7d0-9358bb536706"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5510),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5510),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5510),
                            UserId = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a")
                        },
                        new
                        {
                            Id = new Guid("2ae825c3-52dd-4475-acd6-4b86df2f62ed"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5513),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5512),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5513),
                            UserId = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a")
                        },
                        new
                        {
                            Id = new Guid("b1668541-9036-4905-b3ac-1eed7ab6c115"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5516),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5515),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5516),
                            UserId = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a")
                        },
                        new
                        {
                            Id = new Guid("6f627c3d-13d7-4a1d-b70f-352eed59005b"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5520),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5520),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5521),
                            UserId = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a")
                        },
                        new
                        {
                            Id = new Guid("ae0cc123-f484-421f-bd6b-6c21af6cda2c"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5523),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5523),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5524),
                            UserId = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a")
                        },
                        new
                        {
                            Id = new Guid("9dfb521a-f691-4dd3-a19b-5165a0f9e31d"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5526),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5526),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5526),
                            UserId = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a")
                        },
                        new
                        {
                            Id = new Guid("9e230e26-894d-413b-970f-ee5cd3fe4b2d"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5529),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5528),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5529),
                            UserId = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a")
                        },
                        new
                        {
                            Id = new Guid("026c1e95-237a-4032-bdee-d930d57dc92d"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5534),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5533),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5534),
                            UserId = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a")
                        },
                        new
                        {
                            Id = new Guid("cbebe4d6-1661-46e6-8a39-e1d2d0378a28"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5536),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 16, 20, 58, 27, 850, DateTimeKind.Local).AddTicks(5536),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5537),
                            UserId = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a")
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4739e3fa-8030-499c-9eac-0f648722a33b"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(4116),
                            Name = "ROLE_ADMIN",
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(4119)
                        },
                        new
                        {
                            Id = new Guid("fc70765b-d527-4700-a992-b8ccb950b134"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(4151),
                            Name = "ROLE_USER",
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(4151)
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("full_name");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("password_hash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("password_salt");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("profile_picture");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("refresh_token");

                    b.Property<string>("ResetPasswordToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("reset_password_token");

                    b.Property<DateTime>("ResetTokenExpires")
                        .HasColumnType("datetime2")
                        .HasColumnName("reset_token_expires");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("role_id");

                    b.Property<DateTime>("TokenExpires")
                        .HasColumnType("datetime2")
                        .HasColumnName("token_expires");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("VerificationToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("verification_token");

                    b.Property<DateTime>("VerifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("verified_at");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("704e4fbf-c7fb-4464-a9f2-6b7d82c03f0f"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5200),
                            Email = "admin1@example.com",
                            FullName = "Admin Satu",
                            PasswordHash = new byte[] { 252, 220, 227, 110, 30, 82, 178, 64, 52, 121, 129, 79, 179, 152, 39, 206, 199, 239, 76, 197, 252, 215, 160, 221, 132, 213, 237, 30, 103, 87, 113, 184 },
                            PasswordSalt = new byte[] { 106, 150, 70, 249, 234, 129, 117, 15, 126, 89, 154, 20, 243, 158, 217, 234, 146, 24, 204, 94, 164, 77, 219, 163, 238, 89, 75, 137, 151, 128, 227, 216, 18, 199, 203, 60, 245, 172, 246, 79, 117, 82, 16, 225, 121, 210, 151, 174, 117, 89, 116, 236, 167, 119, 31, 141, 227, 102, 122, 179, 213, 212, 252, 144 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("4739e3fa-8030-499c-9eac-0f648722a33b"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5201),
                            VerifiedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5200)
                        },
                        new
                        {
                            Id = new Guid("ce8e7880-e541-436f-b22b-6e606c643285"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5204),
                            Email = "admin2@example.com",
                            FullName = "Admin Dua",
                            PasswordHash = new byte[] { 252, 220, 227, 110, 30, 82, 178, 64, 52, 121, 129, 79, 179, 152, 39, 206, 199, 239, 76, 197, 252, 215, 160, 221, 132, 213, 237, 30, 103, 87, 113, 184 },
                            PasswordSalt = new byte[] { 106, 150, 70, 249, 234, 129, 117, 15, 126, 89, 154, 20, 243, 158, 217, 234, 146, 24, 204, 94, 164, 77, 219, 163, 238, 89, 75, 137, 151, 128, 227, 216, 18, 199, 203, 60, 245, 172, 246, 79, 117, 82, 16, 225, 121, 210, 151, 174, 117, 89, 116, 236, 167, 119, 31, 141, 227, 102, 122, 179, 213, 212, 252, 144 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("4739e3fa-8030-499c-9eac-0f648722a33b"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5204),
                            VerifiedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5203)
                        },
                        new
                        {
                            Id = new Guid("af546513-ee69-4cde-8849-ba88d4b93070"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5206),
                            Email = "user1@example.com",
                            FullName = "User Satu",
                            PasswordHash = new byte[] { 252, 220, 227, 110, 30, 82, 178, 64, 52, 121, 129, 79, 179, 152, 39, 206, 199, 239, 76, 197, 252, 215, 160, 221, 132, 213, 237, 30, 103, 87, 113, 184 },
                            PasswordSalt = new byte[] { 106, 150, 70, 249, 234, 129, 117, 15, 126, 89, 154, 20, 243, 158, 217, 234, 146, 24, 204, 94, 164, 77, 219, 163, 238, 89, 75, 137, 151, 128, 227, 216, 18, 199, 203, 60, 245, 172, 246, 79, 117, 82, 16, 225, 121, 210, 151, 174, 117, 89, 116, 236, 167, 119, 31, 141, 227, 102, 122, 179, 213, 212, 252, 144 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("fc70765b-d527-4700-a992-b8ccb950b134"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5207),
                            VerifiedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5206)
                        },
                        new
                        {
                            Id = new Guid("8719cba1-c077-4bfd-8912-e12c5df1e20a"),
                            CreatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5213),
                            Email = "user2@example.com",
                            FullName = "User Dua",
                            PasswordHash = new byte[] { 252, 220, 227, 110, 30, 82, 178, 64, 52, 121, 129, 79, 179, 152, 39, 206, 199, 239, 76, 197, 252, 215, 160, 221, 132, 213, 237, 30, 103, 87, 113, 184 },
                            PasswordSalt = new byte[] { 106, 150, 70, 249, 234, 129, 117, 15, 126, 89, 154, 20, 243, 158, 217, 234, 146, 24, 204, 94, 164, 77, 219, 163, 238, 89, 75, 137, 151, 128, 227, 216, 18, 199, 203, 60, 245, 172, 246, 79, 117, 82, 16, 225, 121, 210, 151, 174, 117, 89, 116, 236, 167, 119, 31, 141, 227, 102, 122, 179, 213, 212, 252, 144 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("fc70765b-d527-4700-a992-b8ccb950b134"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5214),
                            VerifiedAt = new DateTime(2023, 7, 16, 13, 58, 27, 850, DateTimeKind.Utc).AddTicks(5213)
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Contact", b =>
                {
                    b.HasOne("CoreCashApi.Entities.User", "User")
                        .WithMany("Contacts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Ledger", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Account", "Account")
                        .WithMany("Ledgers")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithMany("Ledgers")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Payable", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Contact", "Creditor")
                        .WithMany("Payables")
                        .HasForeignKey("CreditorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithOne("Payable")
                        .HasForeignKey("CoreCashApi.Entities.Payable", "RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creditor");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.PayableLedger", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Payable", "Payable")
                        .WithMany("PayableLedgers")
                        .HasForeignKey("PayableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithOne("PayableLedger")
                        .HasForeignKey("CoreCashApi.Entities.PayableLedger", "RecordId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Payable");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Receivable", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Contact", "Debtor")
                        .WithMany("Receivables")
                        .HasForeignKey("DebtorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithOne("Receivable")
                        .HasForeignKey("CoreCashApi.Entities.Receivable", "RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Debtor");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.ReceivableLedger", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Receivable", "Receivable")
                        .WithMany("ReceivableLedgers")
                        .HasForeignKey("ReceivableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithOne("ReceivableLedger")
                        .HasForeignKey("CoreCashApi.Entities.ReceivableLedger", "RecordId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Receivable");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Record", b =>
                {
                    b.HasOne("CoreCashApi.Entities.User", "User")
                        .WithMany("Records")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoreCashApi.Entities.User", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Account", b =>
                {
                    b.Navigation("Ledgers");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Contact", b =>
                {
                    b.Navigation("Payables");

                    b.Navigation("Receivables");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Payable", b =>
                {
                    b.Navigation("PayableLedgers");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Receivable", b =>
                {
                    b.Navigation("ReceivableLedgers");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Record", b =>
                {
                    b.Navigation("Ledgers");

                    b.Navigation("Payable");

                    b.Navigation("PayableLedger");

                    b.Navigation("Receivable");

                    b.Navigation("ReceivableLedger");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CoreCashApi.Entities.User", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Records");
                });
#pragma warning restore 612, 618
        }
    }
}
