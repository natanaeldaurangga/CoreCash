// <auto-generated />
using System;
using CoreCashApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoreCashApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230822135311_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CoreCashApi.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<int>("AccountCode")
                        .HasColumnType("int")
                        .HasColumnName("account_code");

                    b.Property<int>("AccountGroup")
                        .HasColumnType("int")
                        .HasColumnName("account_group");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("account_name");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            AccountCode = 11001,
                            AccountGroup = 11,
                            AccountName = "CASH",
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8742),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8743)
                        },
                        new
                        {
                            Id = new Guid("a4edc04b-36b8-464b-87a0-35e4e006641a"),
                            AccountCode = 11005,
                            AccountGroup = 11,
                            AccountName = "RECEIVABLE",
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8745),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8745)
                        },
                        new
                        {
                            Id = new Guid("ae6ce077-681d-495c-8ba1-8f2ce9a5ae96"),
                            AccountCode = 21001,
                            AccountGroup = 21,
                            AccountName = "PAYABLE",
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8747),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8747)
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("phone_number");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("UserId");

                    b.ToTable("contacts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f2f4d7eb-3d7a-4caf-8ac3-a3505e7453b8"),
                            Address = "620 Lakeland Center",
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9057),
                            Email = "rhavock0@gov.uk",
                            Name = "Randell Havock",
                            PhoneNumber = "6765109874",
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9057),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("57447951-c13c-49d1-a7bc-3f18be463d98"),
                            Address = "34 Eastwood Avenue",
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9060),
                            Email = "smahood1@wufoo.com",
                            Name = "Sarine Mahood",
                            PhoneNumber = "6977095403",
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9060),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("f2cff3b1-bae6-4614-b273-fd149fb194cb"),
                            Address = "17 Onsgard Avenue",
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9066),
                            Email = "bmcging2@ihg.com",
                            Name = "Benjie McGing",
                            PhoneNumber = "5025308916",
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9066),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("46a48b63-8044-428f-bc17-382519594da2"),
                            Address = "96 Summerview Drive",
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9068),
                            Email = "klanphere3@upenn.edu",
                            Name = "Kev Lanphere",
                            PhoneNumber = "7268834724",
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9068),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("87c39553-250c-4cb0-887c-12687ee62907"),
                            Address = "39494 Kartens Terrace",
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9069),
                            Email = "sblanchard4@vinaora.com",
                            Name = "Sal Blanchard",
                            PhoneNumber = "4904310249",
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9070),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("f0473eb7-3c2d-4a8b-bb82-54f78401147f"),
                            Address = "615 Jenifer Alley",
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9071),
                            Email = "ldunster5@marketwatch.com",
                            Name = "Laurette Dunster",
                            PhoneNumber = "7678939672",
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9071),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("a36252cb-da6c-43ef-ad5c-e0bbb8b07cb7"),
                            Address = "4649 Swallow Trail",
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9073),
                            Email = "tshew6@tripadvisor.com",
                            Name = "Tiphany Shew",
                            PhoneNumber = "1457940882",
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9073),
                            UserId = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed")
                        },
                        new
                        {
                            Id = new Guid("723812cd-b0f9-49ba-86df-7086741aa425"),
                            Address = "10 Calypso Center",
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9074),
                            Email = "candrelli7@intel.com",
                            Name = "Ceil Andrelli",
                            PhoneNumber = "1401949061",
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9075),
                            UserId = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed")
                        },
                        new
                        {
                            Id = new Guid("6c9f14dc-a781-44a4-8fc5-3d5fa85817b3"),
                            Address = "11 Old Shore Terrace",
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9076),
                            Email = "msivorn8@icq.com",
                            Name = "Margaretta Sivorn",
                            PhoneNumber = "5311644464",
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9076),
                            UserId = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed")
                        },
                        new
                        {
                            Id = new Guid("7acd1227-f609-4623-85bf-c5b82d3d3023"),
                            Address = "4330 Doe Crossing Junction",
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9078),
                            Email = "vwoodsford9@issuu.com",
                            Name = "Vasilis Woodsford",
                            PhoneNumber = "8364764344",
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9078),
                            UserId = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed")
                        },
                        new
                        {
                            Id = new Guid("9ea2e36f-dd2d-43b5-b3f1-2e2da4e24881"),
                            Address = "54 Redwing Drive",
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9082),
                            Email = "jorneblowa@youtube.com",
                            Name = "Jennee Orneblow",
                            PhoneNumber = "9316403125",
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9082),
                            UserId = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed")
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Ledger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("account_id");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("balance");

                    b.Property<int>("Entry")
                        .HasColumnType("int")
                        .HasColumnName("entry");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("record_id");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("RecordId", "AccountId");

                    b.ToTable("ledgers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4434e69e-3ae8-4823-bbde-afba3659b9d4"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 210000m,
                            Entry = 0,
                            RecordId = new Guid("063746cc-0553-4b67-a1db-74fb28aa29f7")
                        },
                        new
                        {
                            Id = new Guid("ee01b0a9-3aba-4071-abb4-5d3d3bab9da4"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 200000m,
                            Entry = 1,
                            RecordId = new Guid("ccb6b25a-1eb8-40b4-958e-74a9d86fcf3f")
                        },
                        new
                        {
                            Id = new Guid("2f478d02-37a9-483a-9942-6c7456a315b7"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 190000m,
                            Entry = 0,
                            RecordId = new Guid("80c550fb-ef17-42b9-8c65-61eac91584c5")
                        },
                        new
                        {
                            Id = new Guid("8a4c5996-7e46-47cb-9c4a-4b9e5ca1e064"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 180000m,
                            Entry = 1,
                            RecordId = new Guid("ecb991d1-f44c-4956-98fd-83cf177475c0")
                        },
                        new
                        {
                            Id = new Guid("4cb037d4-5674-4b8a-a03f-54ee453fe50b"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 170000m,
                            Entry = 0,
                            RecordId = new Guid("b6a144a9-dbdd-4189-bf26-c546b0827923")
                        },
                        new
                        {
                            Id = new Guid("3c1b685a-d126-4100-b5db-e720e3255cd4"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 160000m,
                            Entry = 1,
                            RecordId = new Guid("9528a09f-db5b-402b-a1d0-6329f34a1bd4")
                        },
                        new
                        {
                            Id = new Guid("32cca770-a351-4b1b-a860-f1791c7889b2"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 150000m,
                            Entry = 0,
                            RecordId = new Guid("568d70cd-8ab0-4e57-adf1-e186a4e4ae0a")
                        },
                        new
                        {
                            Id = new Guid("57bd55ef-025b-40d0-a9bc-7dd886c8825e"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 140000m,
                            Entry = 1,
                            RecordId = new Guid("6b18309a-f58a-450e-8be8-b1f321998bb1")
                        },
                        new
                        {
                            Id = new Guid("26be0c07-e225-4776-ba42-3617fe8037d3"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 130000m,
                            Entry = 0,
                            RecordId = new Guid("d5de233a-bcf8-4f5b-b1f1-f9b6c2249aff")
                        },
                        new
                        {
                            Id = new Guid("042d51dd-b206-4912-8b28-b026baae0740"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 120000m,
                            Entry = 1,
                            RecordId = new Guid("cd1e380a-58ed-450b-98d8-04b68f49fed6")
                        },
                        new
                        {
                            Id = new Guid("062295a8-e350-416e-9ab6-9a842c4c7ebe"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 110000m,
                            Entry = 0,
                            RecordId = new Guid("5f46a0ba-549e-4f6e-b9b5-438082d77898")
                        },
                        new
                        {
                            Id = new Guid("67897dfe-b3d7-4397-9d3e-08dbe6737a4c"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 100000m,
                            Entry = 1,
                            RecordId = new Guid("1bd8a77b-4d58-4e03-89a4-dcad72961b83")
                        },
                        new
                        {
                            Id = new Guid("b9e21c4a-8bc6-482b-ac12-b866f844bf4b"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 90000m,
                            Entry = 0,
                            RecordId = new Guid("dc2cfb75-8df9-4647-a0ba-2761a3b4209d")
                        },
                        new
                        {
                            Id = new Guid("a10b6c85-7fcf-4bdd-97a8-1acf91de20e8"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 80000m,
                            Entry = 1,
                            RecordId = new Guid("427fd471-ab1e-44bc-8976-bac56da138f1")
                        },
                        new
                        {
                            Id = new Guid("8a985981-784c-4756-9aaa-ad9df2afe2d4"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 70000m,
                            Entry = 0,
                            RecordId = new Guid("7cc5b8dd-220c-424c-9d75-1b4f34d16bf8")
                        },
                        new
                        {
                            Id = new Guid("da5fc32b-ce25-4276-aa69-80d77975c435"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 60000m,
                            Entry = 1,
                            RecordId = new Guid("09a5b2fe-e049-455c-873c-6c716fc518d8")
                        },
                        new
                        {
                            Id = new Guid("7093a7dd-c7b7-464e-9a9a-1777dd1d5e2c"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 50000m,
                            Entry = 0,
                            RecordId = new Guid("d0d7ec82-3b27-4ea0-99a6-ee9eeb08c5f4")
                        },
                        new
                        {
                            Id = new Guid("abe20050-6bba-47dc-a05a-c7b8429123fb"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 40000m,
                            Entry = 1,
                            RecordId = new Guid("9827c1a6-d338-4997-b26b-abf984ea8287")
                        },
                        new
                        {
                            Id = new Guid("99bb4a65-5a4f-491d-ace8-685e15e9b40f"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 30000m,
                            Entry = 0,
                            RecordId = new Guid("27d438ed-1657-4d27-ad3b-b9a65730229b")
                        },
                        new
                        {
                            Id = new Guid("04e2f944-df31-4e57-95fc-bae497c66874"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 20000m,
                            Entry = 1,
                            RecordId = new Guid("152da5a4-bc3b-4852-87c1-05938bdfb4ef")
                        },
                        new
                        {
                            Id = new Guid("a864b1ef-97d9-4e07-b16c-e82d78dfe5f8"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 210000m,
                            Entry = 0,
                            RecordId = new Guid("cae09a4d-ecdd-4e36-a544-ea68054c4b5d")
                        },
                        new
                        {
                            Id = new Guid("8679de4d-2480-4602-8677-a85aacd10835"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 200000m,
                            Entry = 1,
                            RecordId = new Guid("95170234-6b86-415b-9cac-8c8afb37c970")
                        },
                        new
                        {
                            Id = new Guid("8a5bec26-5113-4435-a96c-a64a9622149e"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 190000m,
                            Entry = 0,
                            RecordId = new Guid("898cd1a4-099c-4e84-9389-8ea343fa41b5")
                        },
                        new
                        {
                            Id = new Guid("c0a60beb-b007-408b-8954-6db87bb41c63"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 180000m,
                            Entry = 1,
                            RecordId = new Guid("3cac0ea0-74cb-4a16-8adf-c1c00b24322c")
                        },
                        new
                        {
                            Id = new Guid("e8be08dd-5e1e-4f58-98c8-06a0eae00440"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 170000m,
                            Entry = 0,
                            RecordId = new Guid("c8da30e9-278c-4076-bbaf-eeb569a38912")
                        },
                        new
                        {
                            Id = new Guid("4d2d10a3-5a25-49f0-9416-239150e49171"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 160000m,
                            Entry = 1,
                            RecordId = new Guid("3292fabb-06a4-40e9-b514-942b86704cab")
                        },
                        new
                        {
                            Id = new Guid("9ba11fa9-0664-49b3-8e80-dd79d7527887"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 150000m,
                            Entry = 0,
                            RecordId = new Guid("f5f7c33c-846e-403b-bd45-b826324687c6")
                        },
                        new
                        {
                            Id = new Guid("22e1bf5c-03ee-44e8-af8b-ef5cfb3d541a"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 140000m,
                            Entry = 1,
                            RecordId = new Guid("9e677aa7-657d-4111-9830-8fa7c43de843")
                        },
                        new
                        {
                            Id = new Guid("47966076-7eb6-48c5-bb43-52a2825dfad2"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 130000m,
                            Entry = 0,
                            RecordId = new Guid("2e9dcc44-3483-46fb-8b1a-9fc2b6cb558f")
                        },
                        new
                        {
                            Id = new Guid("39948f94-de30-4d12-ad73-8f11c7309bba"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 120000m,
                            Entry = 1,
                            RecordId = new Guid("e1e6a4fc-8669-496a-9a3d-adb49a508df6")
                        },
                        new
                        {
                            Id = new Guid("847ce75c-a26f-4965-af92-603c2bbf98da"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 110000m,
                            Entry = 0,
                            RecordId = new Guid("f2e4c66d-3b7c-4beb-ae28-e9be82969820")
                        },
                        new
                        {
                            Id = new Guid("0be63f99-1783-4e65-b4f7-d15b72247452"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 100000m,
                            Entry = 1,
                            RecordId = new Guid("de0a8c63-db77-488a-909a-63ec24f6a5ac")
                        },
                        new
                        {
                            Id = new Guid("277b451e-6fbe-4c4b-aa0c-b2ffa9ba2945"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 90000m,
                            Entry = 0,
                            RecordId = new Guid("f0ef2aba-d85e-4734-a799-4af28f79fa39")
                        },
                        new
                        {
                            Id = new Guid("3f78eb3f-40c5-46f7-98de-faa41b7cb34b"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 80000m,
                            Entry = 1,
                            RecordId = new Guid("574c51d9-bb72-4946-8497-291ecd82e684")
                        },
                        new
                        {
                            Id = new Guid("8cf972cf-c0a7-4f63-b23f-e2e6b9f521c8"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 70000m,
                            Entry = 0,
                            RecordId = new Guid("b517f50d-938a-44f1-8660-a66e16575ab7")
                        },
                        new
                        {
                            Id = new Guid("ac10ed00-d646-4bce-9437-b0eee496e17d"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 60000m,
                            Entry = 1,
                            RecordId = new Guid("4a4d2585-5c0e-4889-aef2-77e28f18fa0f")
                        },
                        new
                        {
                            Id = new Guid("ed01bf91-5df2-43a0-bb4d-9bcca087d657"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 50000m,
                            Entry = 0,
                            RecordId = new Guid("469f56a6-0f10-41f5-9f87-0daf0cc2fd3c")
                        },
                        new
                        {
                            Id = new Guid("0c216276-25af-4689-b044-d34975752d4e"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 40000m,
                            Entry = 1,
                            RecordId = new Guid("f7cec09c-15e0-4de1-b9b5-35f9be926e7c")
                        },
                        new
                        {
                            Id = new Guid("de5c4f40-b907-4b99-bf3f-71bc3020373e"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 30000m,
                            Entry = 0,
                            RecordId = new Guid("5ba28aa9-228d-490d-9a89-ca70e006191e")
                        },
                        new
                        {
                            Id = new Guid("e362022b-b735-48b9-a415-a42bd370c4b1"),
                            AccountId = new Guid("85e41921-df7f-40e0-a84b-6f833b2d7dc3"),
                            Balance = 20000m,
                            Entry = 1,
                            RecordId = new Guid("b4adc28d-196e-4418-a143-5147f1bbb90f")
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.PayableLedger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid>("CreditorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("creditor_id");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<int>("RecordGroup")
                        .HasColumnType("int")
                        .HasColumnName("record_group");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("record_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("CreditorId");

                    b.HasIndex("RecordId")
                        .IsUnique();

                    b.HasIndex("RecordId", "CreditorId");

                    b.ToTable("payable_ledgers");
                });

            modelBuilder.Entity("CoreCashApi.Entities.ReceivableLedger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid>("DebtorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("debtor_id");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("record_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("DebtorId");

                    b.HasIndex("RecordId")
                        .IsUnique();

                    b.HasIndex("RecordId", "DebtorId");

                    b.ToTable("receivable_ledgers");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("RecordGroup")
                        .HasColumnType("int")
                        .HasColumnName("record_group");

                    b.Property<DateTime>("RecordedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("recorded_at");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("records");

                    b.HasData(
                        new
                        {
                            Id = new Guid("063746cc-0553-4b67-a1db-74fb28aa29f7"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8782),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8771),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8782),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("ccb6b25a-1eb8-40b4-958e-74a9d86fcf3f"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8795),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8794),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8795),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("80c550fb-ef17-42b9-8c65-61eac91584c5"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8798),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8798),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8798),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("ecb991d1-f44c-4956-98fd-83cf177475c0"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8801),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8801),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8802),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("b6a144a9-dbdd-4189-bf26-c546b0827923"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8804),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8804),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8805),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("9528a09f-db5b-402b-a1d0-6329f34a1bd4"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8811),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8810),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8811),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("568d70cd-8ab0-4e57-adf1-e186a4e4ae0a"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8814),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8813),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8814),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("6b18309a-f58a-450e-8be8-b1f321998bb1"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8817),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8817),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8817),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("d5de233a-bcf8-4f5b-b1f1-f9b6c2249aff"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8820),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8819),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8820),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("cd1e380a-58ed-450b-98d8-04b68f49fed6"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8853),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8853),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8854),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("5f46a0ba-549e-4f6e-b9b5-438082d77898"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8857),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8856),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8857),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("1bd8a77b-4d58-4e03-89a4-dcad72961b83"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8860),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8859),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8860),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("dc2cfb75-8df9-4647-a0ba-2761a3b4209d"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8863),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8862),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8863),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("427fd471-ab1e-44bc-8976-bac56da138f1"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8869),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8868),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8869),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("7cc5b8dd-220c-424c-9d75-1b4f34d16bf8"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8871),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8871),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8872),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("09a5b2fe-e049-455c-873c-6c716fc518d8"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8874),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8874),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8874),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("d0d7ec82-3b27-4ea0-99a6-ee9eeb08c5f4"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8877),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8876),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8877),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("9827c1a6-d338-4997-b26b-abf984ea8287"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8884),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8883),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8884),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("27d438ed-1657-4d27-ad3b-b9a65730229b"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8886),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8886),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8887),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("152da5a4-bc3b-4852-87c1-05938bdfb4ef"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8889),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8889),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8889),
                            UserId = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2")
                        },
                        new
                        {
                            Id = new Guid("cae09a4d-ecdd-4e36-a544-ea68054c4b5d"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8931),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8930),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8931),
                            UserId = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed")
                        },
                        new
                        {
                            Id = new Guid("95170234-6b86-415b-9cac-8c8afb37c970"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8938),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8938),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8938),
                            UserId = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed")
                        },
                        new
                        {
                            Id = new Guid("898cd1a4-099c-4e84-9389-8ea343fa41b5"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8941),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8941),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8941),
                            UserId = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed")
                        },
                        new
                        {
                            Id = new Guid("3cac0ea0-74cb-4a16-8adf-c1c00b24322c"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8944),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8943),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8944),
                            UserId = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed")
                        },
                        new
                        {
                            Id = new Guid("c8da30e9-278c-4076-bbaf-eeb569a38912"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8947),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8946),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8947),
                            UserId = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed")
                        },
                        new
                        {
                            Id = new Guid("3292fabb-06a4-40e9-b514-942b86704cab"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8953),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8952),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8953),
                            UserId = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed")
                        },
                        new
                        {
                            Id = new Guid("f5f7c33c-846e-403b-bd45-b826324687c6"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8956),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8955),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8956),
                            UserId = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed")
                        },
                        new
                        {
                            Id = new Guid("9e677aa7-657d-4111-9830-8fa7c43de843"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8958),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8958),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8959),
                            UserId = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed")
                        },
                        new
                        {
                            Id = new Guid("2e9dcc44-3483-46fb-8b1a-9fc2b6cb558f"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8961),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8961),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8962),
                            UserId = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed")
                        },
                        new
                        {
                            Id = new Guid("e1e6a4fc-8669-496a-9a3d-adb49a508df6"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8967),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8967),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8967),
                            UserId = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed")
                        },
                        new
                        {
                            Id = new Guid("f2e4c66d-3b7c-4beb-ae28-e9be82969820"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8970),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8970),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8970),
                            UserId = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed")
                        },
                        new
                        {
                            Id = new Guid("de0a8c63-db77-488a-909a-63ec24f6a5ac"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8973),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8972),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8973),
                            UserId = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed")
                        },
                        new
                        {
                            Id = new Guid("f0ef2aba-d85e-4734-a799-4af28f79fa39"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8975),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8975),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8976),
                            UserId = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed")
                        },
                        new
                        {
                            Id = new Guid("574c51d9-bb72-4946-8497-291ecd82e684"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8981),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(8981),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8982),
                            UserId = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed")
                        },
                        new
                        {
                            Id = new Guid("b517f50d-938a-44f1-8660-a66e16575ab7"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9009),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(9009),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9010),
                            UserId = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed")
                        },
                        new
                        {
                            Id = new Guid("4a4d2585-5c0e-4889-aef2-77e28f18fa0f"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9013),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(9012),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9013),
                            UserId = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed")
                        },
                        new
                        {
                            Id = new Guid("469f56a6-0f10-41f5-9f87-0daf0cc2fd3c"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9016),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(9015),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9016),
                            UserId = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed")
                        },
                        new
                        {
                            Id = new Guid("f7cec09c-15e0-4de1-b9b5-35f9be926e7c"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9022),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(9021),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9022),
                            UserId = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed")
                        },
                        new
                        {
                            Id = new Guid("5ba28aa9-228d-490d-9a89-ca70e006191e"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9025),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(9024),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9025),
                            UserId = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed")
                        },
                        new
                        {
                            Id = new Guid("b4adc28d-196e-4418-a143-5147f1bbb90f"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9027),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 22, 20, 53, 11, 20, DateTimeKind.Local).AddTicks(9027),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(9028),
                            UserId = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed")
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("27ffa0bf-e12f-4cf7-b07c-e56e1baab903"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(7622),
                            Name = "ROLE_ADMIN",
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(7626)
                        },
                        new
                        {
                            Id = new Guid("d283c3ea-6efd-4489-bfca-4ff8fe86f43c"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(7658),
                            Name = "ROLE_USER",
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(7658)
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("full_name");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("password_hash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("password_salt");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("profile_picture");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("refresh_token");

                    b.Property<string>("ResetPasswordToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("reset_password_token");

                    b.Property<DateTime>("ResetTokenExpires")
                        .HasColumnType("datetime2")
                        .HasColumnName("reset_token_expires");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("role_id");

                    b.Property<DateTime>("TokenExpires")
                        .HasColumnType("datetime2")
                        .HasColumnName("token_expires");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("VerificationToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("verification_token");

                    b.Property<DateTime>("VerifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("verified_at");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0c73946d-fce9-458c-9531-3e65c28eeb51"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8699),
                            Email = "admin1@example.com",
                            FullName = "Admin Satu",
                            PasswordHash = new byte[] { 125, 151, 97, 153, 143, 10, 83, 219, 23, 109, 100, 157, 119, 19, 28, 28, 253, 137, 235, 210, 115, 7, 166, 52, 9, 12, 51, 194, 114, 137, 73, 49 },
                            PasswordSalt = new byte[] { 156, 100, 99, 124, 119, 111, 254, 192, 9, 182, 132, 207, 242, 51, 82, 180, 240, 192, 232, 155, 6, 50, 153, 210, 150, 130, 108, 121, 69, 49, 126, 144, 251, 59, 200, 82, 216, 209, 199, 140, 156, 182, 92, 133, 104, 59, 25, 145, 194, 129, 179, 185, 69, 225, 221, 214, 70, 80, 133, 92, 38, 205, 128, 235 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("27ffa0bf-e12f-4cf7-b07c-e56e1baab903"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8699),
                            VerifiedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8698)
                        },
                        new
                        {
                            Id = new Guid("18dfba9a-b8bc-4a21-a7ce-31694edbffd7"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8703),
                            Email = "admin2@example.com",
                            FullName = "Admin Dua",
                            PasswordHash = new byte[] { 125, 151, 97, 153, 143, 10, 83, 219, 23, 109, 100, 157, 119, 19, 28, 28, 253, 137, 235, 210, 115, 7, 166, 52, 9, 12, 51, 194, 114, 137, 73, 49 },
                            PasswordSalt = new byte[] { 156, 100, 99, 124, 119, 111, 254, 192, 9, 182, 132, 207, 242, 51, 82, 180, 240, 192, 232, 155, 6, 50, 153, 210, 150, 130, 108, 121, 69, 49, 126, 144, 251, 59, 200, 82, 216, 209, 199, 140, 156, 182, 92, 133, 104, 59, 25, 145, 194, 129, 179, 185, 69, 225, 221, 214, 70, 80, 133, 92, 38, 205, 128, 235 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("27ffa0bf-e12f-4cf7-b07c-e56e1baab903"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8704),
                            VerifiedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8703)
                        },
                        new
                        {
                            Id = new Guid("04f0f524-930e-430c-82d9-888fd05b6ee2"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8706),
                            Email = "user1@example.com",
                            FullName = "User Satu",
                            PasswordHash = new byte[] { 125, 151, 97, 153, 143, 10, 83, 219, 23, 109, 100, 157, 119, 19, 28, 28, 253, 137, 235, 210, 115, 7, 166, 52, 9, 12, 51, 194, 114, 137, 73, 49 },
                            PasswordSalt = new byte[] { 156, 100, 99, 124, 119, 111, 254, 192, 9, 182, 132, 207, 242, 51, 82, 180, 240, 192, 232, 155, 6, 50, 153, 210, 150, 130, 108, 121, 69, 49, 126, 144, 251, 59, 200, 82, 216, 209, 199, 140, 156, 182, 92, 133, 104, 59, 25, 145, 194, 129, 179, 185, 69, 225, 221, 214, 70, 80, 133, 92, 38, 205, 128, 235 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("d283c3ea-6efd-4489-bfca-4ff8fe86f43c"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8706),
                            VerifiedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8706)
                        },
                        new
                        {
                            Id = new Guid("1e97b9af-6eb7-4180-a9c5-bb0f6cb179ed"),
                            CreatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8709),
                            Email = "user2@example.com",
                            FullName = "User Dua",
                            PasswordHash = new byte[] { 125, 151, 97, 153, 143, 10, 83, 219, 23, 109, 100, 157, 119, 19, 28, 28, 253, 137, 235, 210, 115, 7, 166, 52, 9, 12, 51, 194, 114, 137, 73, 49 },
                            PasswordSalt = new byte[] { 156, 100, 99, 124, 119, 111, 254, 192, 9, 182, 132, 207, 242, 51, 82, 180, 240, 192, 232, 155, 6, 50, 153, 210, 150, 130, 108, 121, 69, 49, 126, 144, 251, 59, 200, 82, 216, 209, 199, 140, 156, 182, 92, 133, 104, 59, 25, 145, 194, 129, 179, 185, 69, 225, 221, 214, 70, 80, 133, 92, 38, 205, 128, 235 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("d283c3ea-6efd-4489-bfca-4ff8fe86f43c"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8709),
                            VerifiedAt = new DateTime(2023, 8, 22, 13, 53, 11, 20, DateTimeKind.Utc).AddTicks(8708)
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Contact", b =>
                {
                    b.HasOne("CoreCashApi.Entities.User", "User")
                        .WithMany("Contacts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Ledger", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Account", "Account")
                        .WithMany("Ledgers")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithMany("Ledgers")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.PayableLedger", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Contact", "Creditor")
                        .WithMany("PayableLedgers")
                        .HasForeignKey("CreditorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithOne("PayableLedger")
                        .HasForeignKey("CoreCashApi.Entities.PayableLedger", "RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creditor");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.ReceivableLedger", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Contact", "Debtor")
                        .WithMany("ReceivableLedgers")
                        .HasForeignKey("DebtorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithOne("ReceivableLedger")
                        .HasForeignKey("CoreCashApi.Entities.ReceivableLedger", "RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Debtor");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Record", b =>
                {
                    b.HasOne("CoreCashApi.Entities.User", "User")
                        .WithMany("Records")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoreCashApi.Entities.User", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Account", b =>
                {
                    b.Navigation("Ledgers");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Contact", b =>
                {
                    b.Navigation("PayableLedgers");

                    b.Navigation("ReceivableLedgers");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Record", b =>
                {
                    b.Navigation("Ledgers");

                    b.Navigation("PayableLedger");

                    b.Navigation("ReceivableLedger");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CoreCashApi.Entities.User", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Records");
                });
#pragma warning restore 612, 618
        }
    }
}
