// <auto-generated />
using System;
using CoreCashApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoreCashApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230816130731_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CoreCashApi.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<int>("AccountCode")
                        .HasColumnType("int")
                        .HasColumnName("account_code");

                    b.Property<int>("AccountGroup")
                        .HasColumnType("int")
                        .HasColumnName("account_group");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("account_name");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            AccountCode = 11001,
                            AccountGroup = 11,
                            AccountName = "CASH",
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1314),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1314)
                        },
                        new
                        {
                            Id = new Guid("82ae83bf-e4c8-4689-8d4d-71468b3aef6c"),
                            AccountCode = 11005,
                            AccountGroup = 11,
                            AccountName = "RECEIVABLE",
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1316),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1316)
                        },
                        new
                        {
                            Id = new Guid("fafe0f2e-9f47-4d27-9708-9325283b8293"),
                            AccountCode = 21001,
                            AccountGroup = 21,
                            AccountName = "PAYABLE",
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1318),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1318)
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("phone_number");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("UserId");

                    b.ToTable("contacts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("583240f2-4cfa-4564-af9a-f81f3934ad93"),
                            Address = "620 Lakeland Center",
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1629),
                            Email = "rhavock0@gov.uk",
                            Name = "Randell Havock",
                            PhoneNumber = "6765109874",
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1629),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("37dfd3fe-ef87-4d9e-adff-4ef3c1fb998b"),
                            Address = "34 Eastwood Avenue",
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1632),
                            Email = "smahood1@wufoo.com",
                            Name = "Sarine Mahood",
                            PhoneNumber = "6977095403",
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1632),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("62f26fb8-f132-450c-8e59-9d17e9795dc3"),
                            Address = "17 Onsgard Avenue",
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1634),
                            Email = "bmcging2@ihg.com",
                            Name = "Benjie McGing",
                            PhoneNumber = "5025308916",
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1635),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("03144141-7386-47e0-9822-cd5bd33c811a"),
                            Address = "96 Summerview Drive",
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1636),
                            Email = "klanphere3@upenn.edu",
                            Name = "Kev Lanphere",
                            PhoneNumber = "7268834724",
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1636),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("e3e00d86-4967-41bd-871c-a2af36da0fa8"),
                            Address = "39494 Kartens Terrace",
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1638),
                            Email = "sblanchard4@vinaora.com",
                            Name = "Sal Blanchard",
                            PhoneNumber = "4904310249",
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1638),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("ff3ab6e9-acd9-450e-8c6d-982ea7551a11"),
                            Address = "615 Jenifer Alley",
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1640),
                            Email = "ldunster5@marketwatch.com",
                            Name = "Laurette Dunster",
                            PhoneNumber = "7678939672",
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1640),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("bd526479-68ec-4b6a-82f1-0d0e8968957b"),
                            Address = "4649 Swallow Trail",
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1641),
                            Email = "tshew6@tripadvisor.com",
                            Name = "Tiphany Shew",
                            PhoneNumber = "1457940882",
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1642),
                            UserId = new Guid("7e746144-7175-40b1-93aa-4e75dc290847")
                        },
                        new
                        {
                            Id = new Guid("f4c931a4-4c49-4a23-93f5-4266d199db77"),
                            Address = "10 Calypso Center",
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1644),
                            Email = "candrelli7@intel.com",
                            Name = "Ceil Andrelli",
                            PhoneNumber = "1401949061",
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1645),
                            UserId = new Guid("7e746144-7175-40b1-93aa-4e75dc290847")
                        },
                        new
                        {
                            Id = new Guid("e8336b15-586d-4da5-9a36-e56ad0326433"),
                            Address = "11 Old Shore Terrace",
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1649),
                            Email = "msivorn8@icq.com",
                            Name = "Margaretta Sivorn",
                            PhoneNumber = "5311644464",
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1649),
                            UserId = new Guid("7e746144-7175-40b1-93aa-4e75dc290847")
                        },
                        new
                        {
                            Id = new Guid("e7d54baa-5fe8-45bf-a675-ccf81e79ff3e"),
                            Address = "4330 Doe Crossing Junction",
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1650),
                            Email = "vwoodsford9@issuu.com",
                            Name = "Vasilis Woodsford",
                            PhoneNumber = "8364764344",
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1651),
                            UserId = new Guid("7e746144-7175-40b1-93aa-4e75dc290847")
                        },
                        new
                        {
                            Id = new Guid("033b8068-64c5-43e1-aa7b-785da7958dc9"),
                            Address = "54 Redwing Drive",
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1652),
                            Email = "jorneblowa@youtube.com",
                            Name = "Jennee Orneblow",
                            PhoneNumber = "9316403125",
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1652),
                            UserId = new Guid("7e746144-7175-40b1-93aa-4e75dc290847")
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Ledger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("account_id");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("balance");

                    b.Property<int>("Entry")
                        .HasColumnType("int")
                        .HasColumnName("entry");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("record_id");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("RecordId", "AccountId");

                    b.ToTable("ledgers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3a1551e5-caf9-46f1-8243-98c258a3f4fd"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 210000m,
                            Entry = 0,
                            RecordId = new Guid("636e0632-134f-4d9a-8634-28dc1c84399b")
                        },
                        new
                        {
                            Id = new Guid("bf5bb955-28a4-4555-89b1-08453ef5cd12"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 200000m,
                            Entry = 1,
                            RecordId = new Guid("d817c9d4-84a2-4629-93f7-305384393cd1")
                        },
                        new
                        {
                            Id = new Guid("2777d7fd-ad1e-4263-85d6-1b703e8c5d08"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 190000m,
                            Entry = 0,
                            RecordId = new Guid("b07b56eb-0d71-4d5f-bf30-027a6c6b4c19")
                        },
                        new
                        {
                            Id = new Guid("dbab8809-afc2-4ff0-9869-18d11e878a62"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 180000m,
                            Entry = 1,
                            RecordId = new Guid("8d5576ac-2a1d-47f0-a294-381b9a2cf819")
                        },
                        new
                        {
                            Id = new Guid("6cc53530-4656-41f2-9d9a-61d27a6dfc68"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 170000m,
                            Entry = 0,
                            RecordId = new Guid("422dbf1f-e5e9-4ad2-b9dc-5c985ebbc90d")
                        },
                        new
                        {
                            Id = new Guid("c2a3d8ae-7de3-43c7-b2f0-b69174938e6c"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 160000m,
                            Entry = 1,
                            RecordId = new Guid("7d19f0ae-864b-4353-a1e4-db56af14470b")
                        },
                        new
                        {
                            Id = new Guid("78cde8e6-325a-4b85-b95c-41cf8ac4f8ee"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 150000m,
                            Entry = 0,
                            RecordId = new Guid("79a8ebf3-0f6f-49aa-ac88-eed0641afdc7")
                        },
                        new
                        {
                            Id = new Guid("f6cb0707-c900-4228-b9bc-dd60e538135b"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 140000m,
                            Entry = 1,
                            RecordId = new Guid("a41672cc-d754-41b9-9a62-8c3a58a4943c")
                        },
                        new
                        {
                            Id = new Guid("598721de-e63c-4df3-9803-157905abbd71"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 130000m,
                            Entry = 0,
                            RecordId = new Guid("ca22f92c-ac0d-4b37-9814-81fb508d7e32")
                        },
                        new
                        {
                            Id = new Guid("7635d28b-20ad-4251-b374-dfda767ac825"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 120000m,
                            Entry = 1,
                            RecordId = new Guid("21cd814f-2d27-4893-8202-80142bb08f14")
                        },
                        new
                        {
                            Id = new Guid("8d449000-0d04-45a7-b19d-54285e466a0f"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 110000m,
                            Entry = 0,
                            RecordId = new Guid("ebbfb507-fc92-410f-ba1d-ee2937ad1867")
                        },
                        new
                        {
                            Id = new Guid("90c8a896-09d1-4a67-a3a5-9d161b100b9f"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 100000m,
                            Entry = 1,
                            RecordId = new Guid("334a1a1e-3fb6-47cf-b9b0-af8fd4910324")
                        },
                        new
                        {
                            Id = new Guid("19041061-5900-4aa8-92f6-3f41203b33d8"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 90000m,
                            Entry = 0,
                            RecordId = new Guid("0a55e376-f056-4a15-910f-c8a4231fea2f")
                        },
                        new
                        {
                            Id = new Guid("ab288772-a6e8-4656-9a15-dc969666bffe"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 80000m,
                            Entry = 1,
                            RecordId = new Guid("249d7482-b7d4-46ad-8951-ec2c77240d8a")
                        },
                        new
                        {
                            Id = new Guid("4d531565-79d6-44df-ad8e-95ea59b70963"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 70000m,
                            Entry = 0,
                            RecordId = new Guid("4faeadfe-7827-476c-a2cd-def1e99da5c5")
                        },
                        new
                        {
                            Id = new Guid("c9c7f956-fec8-46f6-87d1-381a3763e805"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 60000m,
                            Entry = 1,
                            RecordId = new Guid("7667b3cd-db60-4763-bcd3-1c43227a98b2")
                        },
                        new
                        {
                            Id = new Guid("e2958eca-24fc-4340-aa3a-afccd05ab3c2"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 50000m,
                            Entry = 0,
                            RecordId = new Guid("009046bf-8cd8-4aad-99ce-083c04c4df76")
                        },
                        new
                        {
                            Id = new Guid("2cdca935-f4ea-4376-946d-fdac81e0dd5f"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 40000m,
                            Entry = 1,
                            RecordId = new Guid("a1cd2f9b-cb5b-4a64-ad87-18d7d01ac1e3")
                        },
                        new
                        {
                            Id = new Guid("0ab30400-ec29-4e4b-89f8-b2f0bc421701"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 30000m,
                            Entry = 0,
                            RecordId = new Guid("e183d8d6-1aa9-4ab2-bbea-951c319b2144")
                        },
                        new
                        {
                            Id = new Guid("24f3babe-9b94-4106-a7d5-703606d8509a"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 20000m,
                            Entry = 1,
                            RecordId = new Guid("d7688ffb-3fdb-43d1-a40c-f79b32c8e959")
                        },
                        new
                        {
                            Id = new Guid("b50ac213-1931-43ff-bd95-ae678039c768"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 210000m,
                            Entry = 0,
                            RecordId = new Guid("f451bfe3-d1a3-44a3-821d-cb9659e6c9fc")
                        },
                        new
                        {
                            Id = new Guid("b46b8f13-91d9-462e-9345-0fb3130f4685"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 200000m,
                            Entry = 1,
                            RecordId = new Guid("2c42c386-155d-48a4-ad3b-2a700d8ec152")
                        },
                        new
                        {
                            Id = new Guid("90c857a5-a57c-450a-8ca9-d47de2936a80"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 190000m,
                            Entry = 0,
                            RecordId = new Guid("aee26031-8cc0-4b46-9776-c73b6a09b4a2")
                        },
                        new
                        {
                            Id = new Guid("2349bf2c-1362-4636-ab9c-f4a69787ac77"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 180000m,
                            Entry = 1,
                            RecordId = new Guid("e913cc47-a2d9-48b2-8136-fd29b642ff7a")
                        },
                        new
                        {
                            Id = new Guid("bbbb05ac-1daf-4b49-b832-529733359d8c"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 170000m,
                            Entry = 0,
                            RecordId = new Guid("a74433b0-87d2-4e4e-8dab-259e35bcf462")
                        },
                        new
                        {
                            Id = new Guid("1d6ef694-cdca-4686-a304-362fd4cc77e2"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 160000m,
                            Entry = 1,
                            RecordId = new Guid("6b4ebfae-35b7-45a8-888e-6135e5be53fb")
                        },
                        new
                        {
                            Id = new Guid("75868197-e5ed-4008-88db-f7c680db8389"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 150000m,
                            Entry = 0,
                            RecordId = new Guid("97948d52-b08b-496a-91c5-8e06c2bf6641")
                        },
                        new
                        {
                            Id = new Guid("64a61685-bfa2-45a0-8db6-042f780a761b"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 140000m,
                            Entry = 1,
                            RecordId = new Guid("a580c0a5-128a-45ce-a3b8-5cb8db357004")
                        },
                        new
                        {
                            Id = new Guid("5879541b-2a88-4598-ba0e-cbb8840ba60c"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 130000m,
                            Entry = 0,
                            RecordId = new Guid("32723766-bf5a-4381-93a9-2060c3906eb4")
                        },
                        new
                        {
                            Id = new Guid("2e50c535-3bf3-4e9f-921a-ae32c859bfaa"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 120000m,
                            Entry = 1,
                            RecordId = new Guid("e94e13de-848d-4506-9382-8bc03aef0fff")
                        },
                        new
                        {
                            Id = new Guid("c5a5d606-462e-409f-a2e9-47211484dec7"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 110000m,
                            Entry = 0,
                            RecordId = new Guid("89aa48b3-e766-4197-87c5-be71ac068013")
                        },
                        new
                        {
                            Id = new Guid("e8694754-e9b7-4a71-a2ff-ebfa224f78c2"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 100000m,
                            Entry = 1,
                            RecordId = new Guid("11f0cafb-44db-4f69-a87c-d7c10f07f27a")
                        },
                        new
                        {
                            Id = new Guid("8d70c761-a8ab-4a80-8225-72bafa0c2c6d"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 90000m,
                            Entry = 0,
                            RecordId = new Guid("9c463c6b-e749-4cdd-aee4-b3c7cbccc2d4")
                        },
                        new
                        {
                            Id = new Guid("57050b33-3f14-4d6b-be03-0aae61bc9f63"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 80000m,
                            Entry = 1,
                            RecordId = new Guid("48f618a8-0d2b-41da-938c-9d07a53453b9")
                        },
                        new
                        {
                            Id = new Guid("2349c5e3-3604-46c0-8477-c3ce22d94705"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 70000m,
                            Entry = 0,
                            RecordId = new Guid("32997332-635d-498d-b364-019da845db4c")
                        },
                        new
                        {
                            Id = new Guid("51570fd1-34ed-4f12-8bf0-f6be4347cd23"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 60000m,
                            Entry = 1,
                            RecordId = new Guid("4442cacc-1657-443f-b236-0e30e7387b92")
                        },
                        new
                        {
                            Id = new Guid("546793b9-58f0-421e-ae32-bcb125b564b9"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 50000m,
                            Entry = 0,
                            RecordId = new Guid("b49e0bc6-f193-4f3c-b69b-3aa231c7734a")
                        },
                        new
                        {
                            Id = new Guid("c2555c14-ce68-454c-b367-eb67fea1c410"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 40000m,
                            Entry = 1,
                            RecordId = new Guid("f5d9809a-0d1a-4003-b3bb-c8d9c9039d7d")
                        },
                        new
                        {
                            Id = new Guid("1320c89c-604b-43b0-9c86-8219f9c64949"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 30000m,
                            Entry = 0,
                            RecordId = new Guid("4c156dde-86bb-4e1f-aec9-f709ac1ebdf9")
                        },
                        new
                        {
                            Id = new Guid("e78b5587-5261-4cce-bbb6-5578f45cdb44"),
                            AccountId = new Guid("42f018e9-1f7d-48bd-b1a8-1ff469534875"),
                            Balance = 20000m,
                            Entry = 1,
                            RecordId = new Guid("5077a7a6-d1c3-4e0f-8234-3db952c7a50e")
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.PayableLedger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid>("CreditorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("creditor_id");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<int>("RecordGroup")
                        .HasColumnType("int")
                        .HasColumnName("record_group");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("record_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("CreditorId");

                    b.HasIndex("RecordId")
                        .IsUnique();

                    b.HasIndex("RecordId", "CreditorId");

                    b.ToTable("payable_ledgers");
                });

            modelBuilder.Entity("CoreCashApi.Entities.ReceivableLedger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid>("DebtorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("debtor_id");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("record_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("DebtorId");

                    b.HasIndex("RecordId")
                        .IsUnique();

                    b.HasIndex("RecordId", "DebtorId");

                    b.ToTable("receivable_ledgers");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("RecordGroup")
                        .HasColumnType("int")
                        .HasColumnName("record_group");

                    b.Property<DateTime>("RecordedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("recorded_at");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("records");

                    b.HasData(
                        new
                        {
                            Id = new Guid("636e0632-134f-4d9a-8634-28dc1c84399b"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1357),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1347),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1357),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("d817c9d4-84a2-4629-93f7-305384393cd1"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1365),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1364),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1365),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("b07b56eb-0d71-4d5f-bf30-027a6c6b4c19"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1368),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1367),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1368),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("8d5576ac-2a1d-47f0-a294-381b9a2cf819"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1371),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1370),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1371),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("422dbf1f-e5e9-4ad2-b9dc-5c985ebbc90d"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1376),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1376),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1377),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("7d19f0ae-864b-4353-a1e4-db56af14470b"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1380),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1379),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1380),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("79a8ebf3-0f6f-49aa-ac88-eed0641afdc7"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1383),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1382),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1383),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("a41672cc-d754-41b9-9a62-8c3a58a4943c"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1385),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1385),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1386),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("ca22f92c-ac0d-4b37-9814-81fb508d7e32"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1391),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1390),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1391),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("21cd814f-2d27-4893-8202-80142bb08f14"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1394),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1393),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1394),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("ebbfb507-fc92-410f-ba1d-ee2937ad1867"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1397),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1396),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1397),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("334a1a1e-3fb6-47cf-b9b0-af8fd4910324"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1435),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1435),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1436),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("0a55e376-f056-4a15-910f-c8a4231fea2f"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1440),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1440),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1440),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("249d7482-b7d4-46ad-8951-ec2c77240d8a"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1443),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1443),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1443),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("4faeadfe-7827-476c-a2cd-def1e99da5c5"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1446),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1446),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1446),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("7667b3cd-db60-4763-bcd3-1c43227a98b2"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1449),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1449),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1449),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("009046bf-8cd8-4aad-99ce-083c04c4df76"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1454),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1453),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1454),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("a1cd2f9b-cb5b-4a64-ad87-18d7d01ac1e3"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1456),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1456),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1457),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("e183d8d6-1aa9-4ab2-bbea-951c319b2144"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1459),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1459),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1460),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("d7688ffb-3fdb-43d1-a40c-f79b32c8e959"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1462),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1462),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1462),
                            UserId = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22")
                        },
                        new
                        {
                            Id = new Guid("f451bfe3-d1a3-44a3-821d-cb9659e6c9fc"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1506),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1506),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1506),
                            UserId = new Guid("7e746144-7175-40b1-93aa-4e75dc290847")
                        },
                        new
                        {
                            Id = new Guid("2c42c386-155d-48a4-ad3b-2a700d8ec152"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1509),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1509),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1510),
                            UserId = new Guid("7e746144-7175-40b1-93aa-4e75dc290847")
                        },
                        new
                        {
                            Id = new Guid("aee26031-8cc0-4b46-9776-c73b6a09b4a2"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1512),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1512),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1513),
                            UserId = new Guid("7e746144-7175-40b1-93aa-4e75dc290847")
                        },
                        new
                        {
                            Id = new Guid("e913cc47-a2d9-48b2-8136-fd29b642ff7a"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1515),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1515),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1515),
                            UserId = new Guid("7e746144-7175-40b1-93aa-4e75dc290847")
                        },
                        new
                        {
                            Id = new Guid("a74433b0-87d2-4e4e-8dab-259e35bcf462"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1520),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1520),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1520),
                            UserId = new Guid("7e746144-7175-40b1-93aa-4e75dc290847")
                        },
                        new
                        {
                            Id = new Guid("6b4ebfae-35b7-45a8-888e-6135e5be53fb"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1523),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1522),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1523),
                            UserId = new Guid("7e746144-7175-40b1-93aa-4e75dc290847")
                        },
                        new
                        {
                            Id = new Guid("97948d52-b08b-496a-91c5-8e06c2bf6641"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1526),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1525),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1526),
                            UserId = new Guid("7e746144-7175-40b1-93aa-4e75dc290847")
                        },
                        new
                        {
                            Id = new Guid("a580c0a5-128a-45ce-a3b8-5cb8db357004"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1529),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1528),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1529),
                            UserId = new Guid("7e746144-7175-40b1-93aa-4e75dc290847")
                        },
                        new
                        {
                            Id = new Guid("32723766-bf5a-4381-93a9-2060c3906eb4"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1533),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1533),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1533),
                            UserId = new Guid("7e746144-7175-40b1-93aa-4e75dc290847")
                        },
                        new
                        {
                            Id = new Guid("e94e13de-848d-4506-9382-8bc03aef0fff"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1536),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1536),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1536),
                            UserId = new Guid("7e746144-7175-40b1-93aa-4e75dc290847")
                        },
                        new
                        {
                            Id = new Guid("89aa48b3-e766-4197-87c5-be71ac068013"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1539),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1538),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1539),
                            UserId = new Guid("7e746144-7175-40b1-93aa-4e75dc290847")
                        },
                        new
                        {
                            Id = new Guid("11f0cafb-44db-4f69-a87c-d7c10f07f27a"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1542),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1541),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1542),
                            UserId = new Guid("7e746144-7175-40b1-93aa-4e75dc290847")
                        },
                        new
                        {
                            Id = new Guid("9c463c6b-e749-4cdd-aee4-b3c7cbccc2d4"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1547),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1546),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1547),
                            UserId = new Guid("7e746144-7175-40b1-93aa-4e75dc290847")
                        },
                        new
                        {
                            Id = new Guid("48f618a8-0d2b-41da-938c-9d07a53453b9"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1549),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1549),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1550),
                            UserId = new Guid("7e746144-7175-40b1-93aa-4e75dc290847")
                        },
                        new
                        {
                            Id = new Guid("32997332-635d-498d-b364-019da845db4c"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1552),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1552),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1553),
                            UserId = new Guid("7e746144-7175-40b1-93aa-4e75dc290847")
                        },
                        new
                        {
                            Id = new Guid("4442cacc-1657-443f-b236-0e30e7387b92"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1555),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1555),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1555),
                            UserId = new Guid("7e746144-7175-40b1-93aa-4e75dc290847")
                        },
                        new
                        {
                            Id = new Guid("b49e0bc6-f193-4f3c-b69b-3aa231c7734a"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1588),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1587),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1588),
                            UserId = new Guid("7e746144-7175-40b1-93aa-4e75dc290847")
                        },
                        new
                        {
                            Id = new Guid("f5d9809a-0d1a-4003-b3bb-c8d9c9039d7d"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1591),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1590),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1591),
                            UserId = new Guid("7e746144-7175-40b1-93aa-4e75dc290847")
                        },
                        new
                        {
                            Id = new Guid("4c156dde-86bb-4e1f-aec9-f709ac1ebdf9"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1594),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1593),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1594),
                            UserId = new Guid("7e746144-7175-40b1-93aa-4e75dc290847")
                        },
                        new
                        {
                            Id = new Guid("5077a7a6-d1c3-4e0f-8234-3db952c7a50e"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1597),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 8, 16, 20, 7, 31, 178, DateTimeKind.Local).AddTicks(1596),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1597),
                            UserId = new Guid("7e746144-7175-40b1-93aa-4e75dc290847")
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8583bf86-599d-4032-890a-b7a95a9b8375"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(208),
                            Name = "ROLE_ADMIN",
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(212)
                        },
                        new
                        {
                            Id = new Guid("7768ffb9-1ee9-45fd-8bb6-6854b5954f0e"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(243),
                            Name = "ROLE_USER",
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(243)
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("full_name");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("password_hash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("password_salt");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("profile_picture");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("refresh_token");

                    b.Property<string>("ResetPasswordToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("reset_password_token");

                    b.Property<DateTime>("ResetTokenExpires")
                        .HasColumnType("datetime2")
                        .HasColumnName("reset_token_expires");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("role_id");

                    b.Property<DateTime>("TokenExpires")
                        .HasColumnType("datetime2")
                        .HasColumnName("token_expires");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("VerificationToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("verification_token");

                    b.Property<DateTime>("VerifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("verified_at");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c1da9533-7503-4e80-bce9-4646fe19f6c3"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1272),
                            Email = "admin1@example.com",
                            FullName = "Admin Satu",
                            PasswordHash = new byte[] { 159, 131, 127, 62, 148, 90, 191, 24, 40, 49, 141, 76, 41, 145, 120, 72, 211, 99, 177, 165, 33, 191, 104, 119, 6, 125, 192, 108, 147, 44, 148, 69 },
                            PasswordSalt = new byte[] { 47, 0, 77, 102, 4, 241, 233, 197, 216, 51, 120, 4, 160, 241, 57, 40, 216, 100, 139, 52, 237, 87, 212, 8, 69, 119, 6, 123, 204, 112, 84, 237, 49, 113, 66, 164, 113, 45, 145, 247, 203, 67, 124, 139, 73, 127, 205, 24, 248, 14, 233, 222, 42, 247, 137, 183, 137, 38, 218, 163, 233, 225, 204, 164 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("8583bf86-599d-4032-890a-b7a95a9b8375"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1274),
                            VerifiedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1272)
                        },
                        new
                        {
                            Id = new Guid("f49d7b45-5f94-43ce-91fa-80d3aba8d132"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1276),
                            Email = "admin2@example.com",
                            FullName = "Admin Dua",
                            PasswordHash = new byte[] { 159, 131, 127, 62, 148, 90, 191, 24, 40, 49, 141, 76, 41, 145, 120, 72, 211, 99, 177, 165, 33, 191, 104, 119, 6, 125, 192, 108, 147, 44, 148, 69 },
                            PasswordSalt = new byte[] { 47, 0, 77, 102, 4, 241, 233, 197, 216, 51, 120, 4, 160, 241, 57, 40, 216, 100, 139, 52, 237, 87, 212, 8, 69, 119, 6, 123, 204, 112, 84, 237, 49, 113, 66, 164, 113, 45, 145, 247, 203, 67, 124, 139, 73, 127, 205, 24, 248, 14, 233, 222, 42, 247, 137, 183, 137, 38, 218, 163, 233, 225, 204, 164 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("8583bf86-599d-4032-890a-b7a95a9b8375"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1277),
                            VerifiedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1276)
                        },
                        new
                        {
                            Id = new Guid("10de2dd9-bea1-4442-b12f-a0cd34d47c22"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1279),
                            Email = "user1@example.com",
                            FullName = "User Satu",
                            PasswordHash = new byte[] { 159, 131, 127, 62, 148, 90, 191, 24, 40, 49, 141, 76, 41, 145, 120, 72, 211, 99, 177, 165, 33, 191, 104, 119, 6, 125, 192, 108, 147, 44, 148, 69 },
                            PasswordSalt = new byte[] { 47, 0, 77, 102, 4, 241, 233, 197, 216, 51, 120, 4, 160, 241, 57, 40, 216, 100, 139, 52, 237, 87, 212, 8, 69, 119, 6, 123, 204, 112, 84, 237, 49, 113, 66, 164, 113, 45, 145, 247, 203, 67, 124, 139, 73, 127, 205, 24, 248, 14, 233, 222, 42, 247, 137, 183, 137, 38, 218, 163, 233, 225, 204, 164 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("7768ffb9-1ee9-45fd-8bb6-6854b5954f0e"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1280),
                            VerifiedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1279)
                        },
                        new
                        {
                            Id = new Guid("7e746144-7175-40b1-93aa-4e75dc290847"),
                            CreatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1282),
                            Email = "user2@example.com",
                            FullName = "User Dua",
                            PasswordHash = new byte[] { 159, 131, 127, 62, 148, 90, 191, 24, 40, 49, 141, 76, 41, 145, 120, 72, 211, 99, 177, 165, 33, 191, 104, 119, 6, 125, 192, 108, 147, 44, 148, 69 },
                            PasswordSalt = new byte[] { 47, 0, 77, 102, 4, 241, 233, 197, 216, 51, 120, 4, 160, 241, 57, 40, 216, 100, 139, 52, 237, 87, 212, 8, 69, 119, 6, 123, 204, 112, 84, 237, 49, 113, 66, 164, 113, 45, 145, 247, 203, 67, 124, 139, 73, 127, 205, 24, 248, 14, 233, 222, 42, 247, 137, 183, 137, 38, 218, 163, 233, 225, 204, 164 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("7768ffb9-1ee9-45fd-8bb6-6854b5954f0e"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1282),
                            VerifiedAt = new DateTime(2023, 8, 16, 13, 7, 31, 178, DateTimeKind.Utc).AddTicks(1282)
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Contact", b =>
                {
                    b.HasOne("CoreCashApi.Entities.User", "User")
                        .WithMany("Contacts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Ledger", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Account", "Account")
                        .WithMany("Ledgers")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithMany("Ledgers")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.PayableLedger", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Contact", "Creditor")
                        .WithMany("PayableLedgers")
                        .HasForeignKey("CreditorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithOne("PayableLedger")
                        .HasForeignKey("CoreCashApi.Entities.PayableLedger", "RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creditor");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.ReceivableLedger", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Contact", "Debtor")
                        .WithMany("ReceivableLedgers")
                        .HasForeignKey("DebtorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithOne("ReceivableLedger")
                        .HasForeignKey("CoreCashApi.Entities.ReceivableLedger", "RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Debtor");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Record", b =>
                {
                    b.HasOne("CoreCashApi.Entities.User", "User")
                        .WithMany("Records")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoreCashApi.Entities.User", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Account", b =>
                {
                    b.Navigation("Ledgers");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Contact", b =>
                {
                    b.Navigation("PayableLedgers");

                    b.Navigation("ReceivableLedgers");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Record", b =>
                {
                    b.Navigation("Ledgers");

                    b.Navigation("PayableLedger");

                    b.Navigation("ReceivableLedger");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CoreCashApi.Entities.User", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Records");
                });
#pragma warning restore 612, 618
        }
    }
}
