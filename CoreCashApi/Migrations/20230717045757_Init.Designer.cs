// <auto-generated />
using System;
using CoreCashApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoreCashApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230717045757_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CoreCashApi.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<int>("AccountCode")
                        .HasColumnType("int")
                        .HasColumnName("account_code");

                    b.Property<int>("AccountGroup")
                        .HasColumnType("int")
                        .HasColumnName("account_group");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("account_name");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            AccountCode = 11001,
                            AccountGroup = 11,
                            AccountName = "CASH",
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5168),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5168)
                        },
                        new
                        {
                            Id = new Guid("425ff2f0-abac-4af7-a8d1-5d5d89e61fdf"),
                            AccountCode = 11005,
                            AccountGroup = 11,
                            AccountName = "RECEIVABLE",
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5170),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5170)
                        },
                        new
                        {
                            Id = new Guid("dbf530c7-9e1c-42ce-96c9-fa39cfd08a47"),
                            AccountCode = 21001,
                            AccountGroup = 21,
                            AccountName = "PAYABLE",
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5172),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5172)
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("phone_number");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("UserId");

                    b.ToTable("contacts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("75a1f206-bdb1-4eb3-a353-e03b4bb55fe6"),
                            Address = "620 Lakeland Center",
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5464),
                            Email = "rhavock0@gov.uk",
                            Name = "Randell Havock",
                            PhoneNumber = "6765109874",
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5464),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("8d854e22-585d-4143-9f7f-76781c276287"),
                            Address = "34 Eastwood Avenue",
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5467),
                            Email = "smahood1@wufoo.com",
                            Name = "Sarine Mahood",
                            PhoneNumber = "6977095403",
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5467),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("de51f0a1-ee44-4811-ac74-20fa40bf6525"),
                            Address = "17 Onsgard Avenue",
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5469),
                            Email = "bmcging2@ihg.com",
                            Name = "Benjie McGing",
                            PhoneNumber = "5025308916",
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5469),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("c5115ef0-2948-47a7-b15c-dac7f19e568e"),
                            Address = "96 Summerview Drive",
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5471),
                            Email = "klanphere3@upenn.edu",
                            Name = "Kev Lanphere",
                            PhoneNumber = "7268834724",
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5471),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("4648fc23-7399-4b36-9e9f-a753eb5e2b58"),
                            Address = "39494 Kartens Terrace",
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5472),
                            Email = "sblanchard4@vinaora.com",
                            Name = "Sal Blanchard",
                            PhoneNumber = "4904310249",
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5472),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("abe9e7a2-8bdb-483f-bc39-7a8cb694f3b6"),
                            Address = "615 Jenifer Alley",
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5474),
                            Email = "ldunster5@marketwatch.com",
                            Name = "Laurette Dunster",
                            PhoneNumber = "7678939672",
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5474),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("610e03d6-4392-4ed3-b044-3626752e5491"),
                            Address = "4649 Swallow Trail",
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5475),
                            Email = "tshew6@tripadvisor.com",
                            Name = "Tiphany Shew",
                            PhoneNumber = "1457940882",
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5476),
                            UserId = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea")
                        },
                        new
                        {
                            Id = new Guid("855e5a8c-e8c1-4142-a081-c5b9ae066f31"),
                            Address = "10 Calypso Center",
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5477),
                            Email = "candrelli7@intel.com",
                            Name = "Ceil Andrelli",
                            PhoneNumber = "1401949061",
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5477),
                            UserId = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea")
                        },
                        new
                        {
                            Id = new Guid("993f9e59-b487-4d02-8c09-51902664022a"),
                            Address = "11 Old Shore Terrace",
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5481),
                            Email = "msivorn8@icq.com",
                            Name = "Margaretta Sivorn",
                            PhoneNumber = "5311644464",
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5481),
                            UserId = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea")
                        },
                        new
                        {
                            Id = new Guid("ee894440-a464-4792-94f1-6ce5199c95f8"),
                            Address = "4330 Doe Crossing Junction",
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5482),
                            Email = "vwoodsford9@issuu.com",
                            Name = "Vasilis Woodsford",
                            PhoneNumber = "8364764344",
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5483),
                            UserId = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea")
                        },
                        new
                        {
                            Id = new Guid("a493f93c-df25-497a-84ec-9795d8e50d62"),
                            Address = "54 Redwing Drive",
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5484),
                            Email = "jorneblowa@youtube.com",
                            Name = "Jennee Orneblow",
                            PhoneNumber = "9316403125",
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5484),
                            UserId = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea")
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Ledger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("account_id");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("balance");

                    b.Property<int>("Entry")
                        .HasColumnType("int")
                        .HasColumnName("entry");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("record_id");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("RecordId", "AccountId");

                    b.ToTable("ledgers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7898f6a5-9cb7-4120-909f-edc43d923736"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 210000m,
                            Entry = 0,
                            RecordId = new Guid("1ba03d01-2868-40d0-bb1e-fd4468de0315")
                        },
                        new
                        {
                            Id = new Guid("8a7ef6f2-b719-4c31-9a38-2e68ce69635f"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 200000m,
                            Entry = 1,
                            RecordId = new Guid("05997ea9-e9cf-4561-8d2e-8606dd4f8e26")
                        },
                        new
                        {
                            Id = new Guid("2048e6d9-472b-4c9b-add4-3036b49f7252"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 190000m,
                            Entry = 0,
                            RecordId = new Guid("248f9b45-3302-4f96-bacb-60f22fada637")
                        },
                        new
                        {
                            Id = new Guid("2c089f41-b48e-46f8-be54-403994bcfbc9"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 180000m,
                            Entry = 1,
                            RecordId = new Guid("9c02dcdd-7b39-451c-8e2d-46c53a9197f6")
                        },
                        new
                        {
                            Id = new Guid("137c47fa-54f3-4314-8c12-16d84f0d2c1c"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 170000m,
                            Entry = 0,
                            RecordId = new Guid("e536426d-5cb2-4a80-9fc1-81ddd0578023")
                        },
                        new
                        {
                            Id = new Guid("e61140df-2aa3-4731-9a49-62e358a43472"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 160000m,
                            Entry = 1,
                            RecordId = new Guid("0becc9eb-0cea-4ffb-88aa-073a06a966b9")
                        },
                        new
                        {
                            Id = new Guid("fe337e08-014e-4239-a80c-9c669ef9229c"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 150000m,
                            Entry = 0,
                            RecordId = new Guid("41b7afbe-3434-46ce-a548-e7735ef469d5")
                        },
                        new
                        {
                            Id = new Guid("ff4ae36b-2267-4413-801c-ce5454053b1d"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 140000m,
                            Entry = 1,
                            RecordId = new Guid("d1bc76c9-d836-4e4e-9554-ecebc585b6cf")
                        },
                        new
                        {
                            Id = new Guid("6dbfd246-61b0-4ad6-a857-45a35e7768c0"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 130000m,
                            Entry = 0,
                            RecordId = new Guid("9d2e1ea6-d5d2-4b51-8644-778f50950ed4")
                        },
                        new
                        {
                            Id = new Guid("8b3a14b0-d89e-49fb-9115-e6351a978ba8"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 120000m,
                            Entry = 1,
                            RecordId = new Guid("17181f5d-86d0-46f9-8603-56ed3b4dbbcb")
                        },
                        new
                        {
                            Id = new Guid("d250d355-a5ef-4c70-b8fe-fa2eadbf3d66"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 110000m,
                            Entry = 0,
                            RecordId = new Guid("0d883426-315e-4e15-aad9-feb1f74f5b09")
                        },
                        new
                        {
                            Id = new Guid("512771fa-7b58-4c67-9f16-c2ea14cc48fc"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 100000m,
                            Entry = 1,
                            RecordId = new Guid("45949344-3820-4539-b222-bf7db999143b")
                        },
                        new
                        {
                            Id = new Guid("de9c3292-3187-44fc-8be4-01ae9f145cdb"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 90000m,
                            Entry = 0,
                            RecordId = new Guid("7c004c6d-c807-417b-be42-06c68c34029d")
                        },
                        new
                        {
                            Id = new Guid("4ad09e43-952c-4b27-91a8-4a7d8112d87a"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 80000m,
                            Entry = 1,
                            RecordId = new Guid("0f9a6955-29a1-4cd3-be47-341e86ff7511")
                        },
                        new
                        {
                            Id = new Guid("46efdf1d-7f16-45d0-b2f9-12e87abe7334"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 70000m,
                            Entry = 0,
                            RecordId = new Guid("9c068935-2175-4cc1-8119-54c7b4bf92aa")
                        },
                        new
                        {
                            Id = new Guid("7712f25f-2e99-4f27-b8fa-034ebf250c9e"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 60000m,
                            Entry = 1,
                            RecordId = new Guid("2679402f-fd57-4c77-956c-3605b8fd3619")
                        },
                        new
                        {
                            Id = new Guid("cb9cf7e5-d028-44c1-bd92-f6e7ec5e367b"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 50000m,
                            Entry = 0,
                            RecordId = new Guid("a071a964-e913-4431-930e-31e9df9ece13")
                        },
                        new
                        {
                            Id = new Guid("7452a1d2-b27b-4c8c-97f2-f343ad95e423"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 40000m,
                            Entry = 1,
                            RecordId = new Guid("1c935a31-e1de-43f0-90c6-7343d78ef95c")
                        },
                        new
                        {
                            Id = new Guid("22658655-b351-42a1-8023-6b0907527832"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 30000m,
                            Entry = 0,
                            RecordId = new Guid("bdb73925-8d8b-4c17-bdab-4f188db108e6")
                        },
                        new
                        {
                            Id = new Guid("c7c8415e-915f-413f-8af1-72d641d3df87"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 20000m,
                            Entry = 1,
                            RecordId = new Guid("9e1f6caa-79b5-46ce-ad39-2e2bef71db62")
                        },
                        new
                        {
                            Id = new Guid("db2d10e6-965a-4d19-b1a8-c45762d93a51"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 210000m,
                            Entry = 0,
                            RecordId = new Guid("8a6597b6-25e7-4b98-a9e4-d2ac171f40b3")
                        },
                        new
                        {
                            Id = new Guid("73dea449-3d26-4823-98f0-ee618796c850"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 200000m,
                            Entry = 1,
                            RecordId = new Guid("e248d2d2-5f8f-4e3e-ae38-6a407ce97912")
                        },
                        new
                        {
                            Id = new Guid("e6ed17e6-fea4-4e9c-861f-5b7b96bdd9f2"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 190000m,
                            Entry = 0,
                            RecordId = new Guid("aec52098-7e43-4034-90ff-d1135defa603")
                        },
                        new
                        {
                            Id = new Guid("050c4a91-63b4-4352-8422-15763eb95a0f"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 180000m,
                            Entry = 1,
                            RecordId = new Guid("68483cfa-c908-4e15-b526-ec9e86a56734")
                        },
                        new
                        {
                            Id = new Guid("5c2217ab-cc28-4ec1-bbcf-df2b414222e6"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 170000m,
                            Entry = 0,
                            RecordId = new Guid("105838c7-1dc6-492c-8135-4a2ff0ccc7bc")
                        },
                        new
                        {
                            Id = new Guid("a9e5d0d8-e7d9-45c4-8286-1c9595d7fab7"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 160000m,
                            Entry = 1,
                            RecordId = new Guid("84ff4573-4de8-4aa5-815b-6397960eaf90")
                        },
                        new
                        {
                            Id = new Guid("f21bd7b1-2a97-4596-98eb-b2b97eef0334"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 150000m,
                            Entry = 0,
                            RecordId = new Guid("2554b5fe-f503-4016-aa4f-fe7125fc66e6")
                        },
                        new
                        {
                            Id = new Guid("3fc294d3-54db-4d26-af27-309505eb3586"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 140000m,
                            Entry = 1,
                            RecordId = new Guid("a0e6a579-26dc-480b-8d82-dfc4d69e93aa")
                        },
                        new
                        {
                            Id = new Guid("3f028057-7b19-4d66-9aef-52ad2dcfe208"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 130000m,
                            Entry = 0,
                            RecordId = new Guid("f9c3176a-cec6-4b9a-a1b0-c4fd36a46902")
                        },
                        new
                        {
                            Id = new Guid("24554c95-05a6-4939-b1e7-e5b05e26f7f2"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 120000m,
                            Entry = 1,
                            RecordId = new Guid("3745b292-a40b-4c62-83eb-aec0937d3d5a")
                        },
                        new
                        {
                            Id = new Guid("c43ccd71-87b3-4913-a19e-3fb5ae96206d"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 110000m,
                            Entry = 0,
                            RecordId = new Guid("7549fb3e-b255-41e3-8541-1b7fffe49284")
                        },
                        new
                        {
                            Id = new Guid("8f8db193-57c3-48ca-a9fb-b8f542ae9575"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 100000m,
                            Entry = 1,
                            RecordId = new Guid("ca5a20ee-cdc2-4242-943c-b6d3d72ebd7c")
                        },
                        new
                        {
                            Id = new Guid("66b25734-28b1-4020-b456-2821b65184e2"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 90000m,
                            Entry = 0,
                            RecordId = new Guid("09b68054-4f6d-432c-8fdc-f00d85637b58")
                        },
                        new
                        {
                            Id = new Guid("e188d9d8-fa00-4895-a60d-233af3c3db2d"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 80000m,
                            Entry = 1,
                            RecordId = new Guid("a810b1ec-41a6-4d48-be82-2ac26a3d7e8f")
                        },
                        new
                        {
                            Id = new Guid("d07bb753-5370-44c7-bfe4-bca05bf03792"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 70000m,
                            Entry = 0,
                            RecordId = new Guid("fbb886e7-b049-4fd1-8d14-ccbc7fbd15f8")
                        },
                        new
                        {
                            Id = new Guid("406d8187-32ee-4ac3-8206-bee7d22baa82"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 60000m,
                            Entry = 1,
                            RecordId = new Guid("ddb4c070-25da-44e1-a605-225b94626e34")
                        },
                        new
                        {
                            Id = new Guid("2eb12eaa-6dfc-4aae-8259-f0cf6ccdab52"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 50000m,
                            Entry = 0,
                            RecordId = new Guid("afc35b8c-e0c2-4cc9-89c1-2494c88f5ee5")
                        },
                        new
                        {
                            Id = new Guid("4b94af2c-1c1c-4393-8634-0683e62d3a9f"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 40000m,
                            Entry = 1,
                            RecordId = new Guid("d6110d05-2874-4434-aa7a-45c340e2fbe6")
                        },
                        new
                        {
                            Id = new Guid("a25dfcfc-6d26-4c6f-90b3-b962f1bac31d"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 30000m,
                            Entry = 0,
                            RecordId = new Guid("552ff3c9-44c8-4df6-97af-6c592c55c39b")
                        },
                        new
                        {
                            Id = new Guid("24ac8bd0-dbe1-4067-97be-8e569f6af847"),
                            AccountId = new Guid("9cfa7436-7931-4da8-aebc-b4a05b479ab9"),
                            Balance = 20000m,
                            Entry = 1,
                            RecordId = new Guid("bc218e8d-1c4b-4ec1-8a02-47316de988e8")
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.PayableLedger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid>("CreditorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("creditor_id");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<int>("RecordGroup")
                        .HasColumnType("int")
                        .HasColumnName("record_group");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("record_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("CreditorId");

                    b.HasIndex("RecordId")
                        .IsUnique();

                    b.HasIndex("RecordId", "CreditorId");

                    b.ToTable("payable_ledgers");
                });

            modelBuilder.Entity("CoreCashApi.Entities.ReceivableLedger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid>("DebtorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("debtor_id");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("record_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("DebtorId");

                    b.HasIndex("RecordId")
                        .IsUnique();

                    b.HasIndex("RecordId", "DebtorId");

                    b.ToTable("receivable_ledgers");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("RecordGroup")
                        .HasColumnType("int")
                        .HasColumnName("record_group");

                    b.Property<DateTime>("RecordedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("recorded_at");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("records");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1ba03d01-2868-40d0-bb1e-fd4468de0315"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5208),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5195),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5209),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("05997ea9-e9cf-4561-8d2e-8606dd4f8e26"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5217),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5217),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5218),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("248f9b45-3302-4f96-bacb-60f22fada637"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5220),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5220),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5221),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("9c02dcdd-7b39-451c-8e2d-46c53a9197f6"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5224),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5223),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5224),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("e536426d-5cb2-4a80-9fc1-81ddd0578023"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5229),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5228),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5229),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("0becc9eb-0cea-4ffb-88aa-073a06a966b9"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5232),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5231),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5232),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("41b7afbe-3434-46ce-a548-e7735ef469d5"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5234),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5234),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5235),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("d1bc76c9-d836-4e4e-9554-ecebc585b6cf"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5237),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5237),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5237),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("9d2e1ea6-d5d2-4b51-8644-778f50950ed4"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5242),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5242),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5242),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("17181f5d-86d0-46f9-8603-56ed3b4dbbcb"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5245),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5244),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5245),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("0d883426-315e-4e15-aad9-feb1f74f5b09"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5248),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5247),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5248),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("45949344-3820-4539-b222-bf7db999143b"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5282),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5282),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5282),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("7c004c6d-c807-417b-be42-06c68c34029d"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5287),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5287),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5287),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("0f9a6955-29a1-4cd3-be47-341e86ff7511"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5290),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5290),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5290),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("9c068935-2175-4cc1-8119-54c7b4bf92aa"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5293),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5292),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5293),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("2679402f-fd57-4c77-956c-3605b8fd3619"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5296),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5296),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5296),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("a071a964-e913-4431-930e-31e9df9ece13"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5301),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5300),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5301),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("1c935a31-e1de-43f0-90c6-7343d78ef95c"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5303),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5303),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5304),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("bdb73925-8d8b-4c17-bdab-4f188db108e6"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5306),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5306),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5306),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("9e1f6caa-79b5-46ce-ad39-2e2bef71db62"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5309),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5309),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5309),
                            UserId = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6")
                        },
                        new
                        {
                            Id = new Guid("8a6597b6-25e7-4b98-a9e4-d2ac171f40b3"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5346),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5346),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5346),
                            UserId = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea")
                        },
                        new
                        {
                            Id = new Guid("e248d2d2-5f8f-4e3e-ae38-6a407ce97912"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5349),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5349),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5349),
                            UserId = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea")
                        },
                        new
                        {
                            Id = new Guid("aec52098-7e43-4034-90ff-d1135defa603"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5352),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5351),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5352),
                            UserId = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea")
                        },
                        new
                        {
                            Id = new Guid("68483cfa-c908-4e15-b526-ec9e86a56734"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5355),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5354),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5355),
                            UserId = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea")
                        },
                        new
                        {
                            Id = new Guid("105838c7-1dc6-492c-8135-4a2ff0ccc7bc"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5360),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5359),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5360),
                            UserId = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea")
                        },
                        new
                        {
                            Id = new Guid("84ff4573-4de8-4aa5-815b-6397960eaf90"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5363),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5362),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5363),
                            UserId = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea")
                        },
                        new
                        {
                            Id = new Guid("2554b5fe-f503-4016-aa4f-fe7125fc66e6"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5365),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5365),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5366),
                            UserId = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea")
                        },
                        new
                        {
                            Id = new Guid("a0e6a579-26dc-480b-8d82-dfc4d69e93aa"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5368),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5368),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5368),
                            UserId = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea")
                        },
                        new
                        {
                            Id = new Guid("f9c3176a-cec6-4b9a-a1b0-c4fd36a46902"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5373),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5372),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5373),
                            UserId = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea")
                        },
                        new
                        {
                            Id = new Guid("3745b292-a40b-4c62-83eb-aec0937d3d5a"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5376),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5375),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5376),
                            UserId = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea")
                        },
                        new
                        {
                            Id = new Guid("7549fb3e-b255-41e3-8541-1b7fffe49284"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5378),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5378),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5379),
                            UserId = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea")
                        },
                        new
                        {
                            Id = new Guid("ca5a20ee-cdc2-4242-943c-b6d3d72ebd7c"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5381),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5381),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5381),
                            UserId = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea")
                        },
                        new
                        {
                            Id = new Guid("09b68054-4f6d-432c-8fdc-f00d85637b58"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5386),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5385),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5386),
                            UserId = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea")
                        },
                        new
                        {
                            Id = new Guid("a810b1ec-41a6-4d48-be82-2ac26a3d7e8f"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5389),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5388),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5389),
                            UserId = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea")
                        },
                        new
                        {
                            Id = new Guid("fbb886e7-b049-4fd1-8d14-ccbc7fbd15f8"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5391),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5391),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5392),
                            UserId = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea")
                        },
                        new
                        {
                            Id = new Guid("ddb4c070-25da-44e1-a605-225b94626e34"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5394),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5394),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5395),
                            UserId = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea")
                        },
                        new
                        {
                            Id = new Guid("afc35b8c-e0c2-4cc9-89c1-2494c88f5ee5"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5399),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5398),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5399),
                            UserId = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea")
                        },
                        new
                        {
                            Id = new Guid("d6110d05-2874-4434-aa7a-45c340e2fbe6"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5427),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5426),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5427),
                            UserId = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea")
                        },
                        new
                        {
                            Id = new Guid("552ff3c9-44c8-4df6-97af-6c592c55c39b"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5430),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5430),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5430),
                            UserId = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea")
                        },
                        new
                        {
                            Id = new Guid("bc218e8d-1c4b-4ec1-8a02-47316de988e8"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5433),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 17, 11, 57, 57, 179, DateTimeKind.Local).AddTicks(5432),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5433),
                            UserId = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea")
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b7f354e8-da85-4275-ab42-a26455086564"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(4224),
                            Name = "ROLE_ADMIN",
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(4226)
                        },
                        new
                        {
                            Id = new Guid("37a31523-fdc3-4221-bbfb-27e4e7a7cda9"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(4264),
                            Name = "ROLE_USER",
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(4264)
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("full_name");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("password_hash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("password_salt");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("profile_picture");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("refresh_token");

                    b.Property<string>("ResetPasswordToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("reset_password_token");

                    b.Property<DateTime>("ResetTokenExpires")
                        .HasColumnType("datetime2")
                        .HasColumnName("reset_token_expires");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("role_id");

                    b.Property<DateTime>("TokenExpires")
                        .HasColumnType("datetime2")
                        .HasColumnName("token_expires");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("VerificationToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("verification_token");

                    b.Property<DateTime>("VerifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("verified_at");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ffcd63e2-ed1b-418f-9c38-8616bed15682"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5131),
                            Email = "admin1@example.com",
                            FullName = "Admin Satu",
                            PasswordHash = new byte[] { 181, 0, 171, 184, 96, 109, 22, 2, 183, 99, 239, 52, 233, 50, 255, 166, 150, 139, 21, 250, 201, 13, 248, 253, 134, 225, 66, 238, 187, 220, 3, 61 },
                            PasswordSalt = new byte[] { 146, 129, 146, 181, 248, 168, 244, 238, 136, 170, 253, 107, 232, 118, 150, 91, 69, 177, 31, 49, 4, 239, 33, 31, 206, 205, 95, 207, 209, 65, 65, 113, 173, 71, 53, 245, 93, 255, 177, 144, 228, 240, 137, 181, 173, 27, 30, 27, 8, 181, 80, 182, 127, 200, 235, 200, 21, 178, 2, 148, 243, 104, 80, 245 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("b7f354e8-da85-4275-ab42-a26455086564"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5131),
                            VerifiedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5131)
                        },
                        new
                        {
                            Id = new Guid("9e12144b-12ea-4f86-b8ef-45d08a0bea40"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5134),
                            Email = "admin2@example.com",
                            FullName = "Admin Dua",
                            PasswordHash = new byte[] { 181, 0, 171, 184, 96, 109, 22, 2, 183, 99, 239, 52, 233, 50, 255, 166, 150, 139, 21, 250, 201, 13, 248, 253, 134, 225, 66, 238, 187, 220, 3, 61 },
                            PasswordSalt = new byte[] { 146, 129, 146, 181, 248, 168, 244, 238, 136, 170, 253, 107, 232, 118, 150, 91, 69, 177, 31, 49, 4, 239, 33, 31, 206, 205, 95, 207, 209, 65, 65, 113, 173, 71, 53, 245, 93, 255, 177, 144, 228, 240, 137, 181, 173, 27, 30, 27, 8, 181, 80, 182, 127, 200, 235, 200, 21, 178, 2, 148, 243, 104, 80, 245 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("b7f354e8-da85-4275-ab42-a26455086564"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5135),
                            VerifiedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5134)
                        },
                        new
                        {
                            Id = new Guid("78f6a4bc-eaaf-4c9d-b35d-6d60a81ab4c6"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5137),
                            Email = "user1@example.com",
                            FullName = "User Satu",
                            PasswordHash = new byte[] { 181, 0, 171, 184, 96, 109, 22, 2, 183, 99, 239, 52, 233, 50, 255, 166, 150, 139, 21, 250, 201, 13, 248, 253, 134, 225, 66, 238, 187, 220, 3, 61 },
                            PasswordSalt = new byte[] { 146, 129, 146, 181, 248, 168, 244, 238, 136, 170, 253, 107, 232, 118, 150, 91, 69, 177, 31, 49, 4, 239, 33, 31, 206, 205, 95, 207, 209, 65, 65, 113, 173, 71, 53, 245, 93, 255, 177, 144, 228, 240, 137, 181, 173, 27, 30, 27, 8, 181, 80, 182, 127, 200, 235, 200, 21, 178, 2, 148, 243, 104, 80, 245 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("37a31523-fdc3-4221-bbfb-27e4e7a7cda9"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5138),
                            VerifiedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5137)
                        },
                        new
                        {
                            Id = new Guid("39591bae-0bd0-4df6-ac8a-fc5be514d7ea"),
                            CreatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5140),
                            Email = "user2@example.com",
                            FullName = "User Dua",
                            PasswordHash = new byte[] { 181, 0, 171, 184, 96, 109, 22, 2, 183, 99, 239, 52, 233, 50, 255, 166, 150, 139, 21, 250, 201, 13, 248, 253, 134, 225, 66, 238, 187, 220, 3, 61 },
                            PasswordSalt = new byte[] { 146, 129, 146, 181, 248, 168, 244, 238, 136, 170, 253, 107, 232, 118, 150, 91, 69, 177, 31, 49, 4, 239, 33, 31, 206, 205, 95, 207, 209, 65, 65, 113, 173, 71, 53, 245, 93, 255, 177, 144, 228, 240, 137, 181, 173, 27, 30, 27, 8, 181, 80, 182, 127, 200, 235, 200, 21, 178, 2, 148, 243, 104, 80, 245 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("37a31523-fdc3-4221-bbfb-27e4e7a7cda9"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5140),
                            VerifiedAt = new DateTime(2023, 7, 17, 4, 57, 57, 179, DateTimeKind.Utc).AddTicks(5140)
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Contact", b =>
                {
                    b.HasOne("CoreCashApi.Entities.User", "User")
                        .WithMany("Contacts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Ledger", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Account", "Account")
                        .WithMany("Ledgers")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithMany("Ledgers")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.PayableLedger", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Contact", "Creditor")
                        .WithMany("PayableLedgers")
                        .HasForeignKey("CreditorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithOne("PayableLedger")
                        .HasForeignKey("CoreCashApi.Entities.PayableLedger", "RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creditor");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.ReceivableLedger", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Contact", "Debtor")
                        .WithMany("ReceivableLedgers")
                        .HasForeignKey("DebtorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithOne("ReceivableLedger")
                        .HasForeignKey("CoreCashApi.Entities.ReceivableLedger", "RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Debtor");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Record", b =>
                {
                    b.HasOne("CoreCashApi.Entities.User", "User")
                        .WithMany("Records")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoreCashApi.Entities.User", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Account", b =>
                {
                    b.Navigation("Ledgers");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Contact", b =>
                {
                    b.Navigation("PayableLedgers");

                    b.Navigation("ReceivableLedgers");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Record", b =>
                {
                    b.Navigation("Ledgers");

                    b.Navigation("PayableLedger");

                    b.Navigation("ReceivableLedger");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CoreCashApi.Entities.User", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Records");
                });
#pragma warning restore 612, 618
        }
    }
}
