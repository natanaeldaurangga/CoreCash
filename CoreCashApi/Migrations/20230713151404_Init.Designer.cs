// <auto-generated />
using System;
using CoreCashApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoreCashApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230713151404_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CoreCashApi.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<int>("AccountCode")
                        .HasColumnType("int")
                        .HasColumnName("account_code");

                    b.Property<int>("AccountGroup")
                        .HasColumnType("int")
                        .HasColumnName("account_group");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("account_name");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            AccountCode = 11001,
                            AccountGroup = 11,
                            AccountName = "CASH",
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7522),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7522)
                        },
                        new
                        {
                            Id = new Guid("a4951a47-3c29-492a-a217-39141ea46bd5"),
                            AccountCode = 11005,
                            AccountGroup = 11,
                            AccountName = "RECEIVABLE",
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7525),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7525)
                        },
                        new
                        {
                            Id = new Guid("c1713ba1-74c2-4161-b12d-25640f581c52"),
                            AccountCode = 21001,
                            AccountGroup = 21,
                            AccountName = "PAYABLE",
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7526),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7527)
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("phone_number");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("UserId");

                    b.ToTable("contacts");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Ledger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("account_id");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("balance");

                    b.Property<int>("Entry")
                        .HasColumnType("int")
                        .HasColumnName("entry");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("record_id");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("RecordId", "AccountId");

                    b.ToTable("ledgers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eb81d16c-71fd-4198-8ba4-1205dcf4e4a1"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 210000m,
                            Entry = 0,
                            RecordId = new Guid("af12ce69-9567-41fc-b0f5-fe40ebe8c736")
                        },
                        new
                        {
                            Id = new Guid("7c273a7f-4452-4df8-be75-834cfe8969e3"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 200000m,
                            Entry = 1,
                            RecordId = new Guid("c8dc1544-f9d0-4bcb-91dd-f1801af7a063")
                        },
                        new
                        {
                            Id = new Guid("d3340f27-83bb-48d5-819d-c376fb0ee8da"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 190000m,
                            Entry = 0,
                            RecordId = new Guid("54398122-ddbb-4327-bb2e-a9abb8188e19")
                        },
                        new
                        {
                            Id = new Guid("c1790adf-fad9-4d90-bfc4-eb7e4f2c385d"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 180000m,
                            Entry = 1,
                            RecordId = new Guid("151cb60c-273b-4745-afb2-0d6db7d0780a")
                        },
                        new
                        {
                            Id = new Guid("59b50ac9-0518-44a9-8309-221543258a7f"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 170000m,
                            Entry = 0,
                            RecordId = new Guid("00b47351-5a1a-4c11-94c0-04b01c4dfa0e")
                        },
                        new
                        {
                            Id = new Guid("ced42e3b-d06c-47f7-9993-46e280672f98"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 160000m,
                            Entry = 1,
                            RecordId = new Guid("b899a460-1e38-4605-9532-4d323fe73610")
                        },
                        new
                        {
                            Id = new Guid("e933ba71-306c-4e2f-9864-0748762ae3c6"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 150000m,
                            Entry = 0,
                            RecordId = new Guid("9d4f6acb-62b4-4024-8130-137764e9f7dc")
                        },
                        new
                        {
                            Id = new Guid("3c6efadc-c0cd-4115-80e7-4a0305521ea3"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 140000m,
                            Entry = 1,
                            RecordId = new Guid("7c4704e5-feac-49ed-9f69-6bc06da3730e")
                        },
                        new
                        {
                            Id = new Guid("2bb12e74-0583-4670-b25e-1f4ae4a2f400"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 130000m,
                            Entry = 0,
                            RecordId = new Guid("2dafd583-139e-4227-b2d3-f5272a4d3eba")
                        },
                        new
                        {
                            Id = new Guid("caa5fba2-4047-483e-898a-39f3c9be27fc"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 120000m,
                            Entry = 1,
                            RecordId = new Guid("42aa4840-e4f9-4c1a-aed4-c9ff6429a80b")
                        },
                        new
                        {
                            Id = new Guid("e34c36d2-2bcb-45e1-b182-c542447092c6"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 110000m,
                            Entry = 0,
                            RecordId = new Guid("942120c3-09aa-492b-9212-a286a65a9d6b")
                        },
                        new
                        {
                            Id = new Guid("62df47f8-ea0e-4403-bca4-b02516047924"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 100000m,
                            Entry = 1,
                            RecordId = new Guid("fb0ce76b-9c79-4616-be7f-85ae028f9267")
                        },
                        new
                        {
                            Id = new Guid("a7c1f9fc-e222-4aa3-ad37-4a4727dad6fb"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 90000m,
                            Entry = 0,
                            RecordId = new Guid("4cf99914-a41e-4f92-9387-3845ab897220")
                        },
                        new
                        {
                            Id = new Guid("8743b8b8-c8bd-4397-be95-fdc279fcf58d"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 80000m,
                            Entry = 1,
                            RecordId = new Guid("7384ed80-9d6a-4342-8e28-6e93b163907e")
                        },
                        new
                        {
                            Id = new Guid("361d1a44-585c-4cf1-ba58-8a507e79fdd2"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 70000m,
                            Entry = 0,
                            RecordId = new Guid("a59253e5-8730-4667-aff8-74e1919f2475")
                        },
                        new
                        {
                            Id = new Guid("8e67387f-f229-4fd3-863d-265e678f3570"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 60000m,
                            Entry = 1,
                            RecordId = new Guid("f551f791-920e-48c2-9f5f-06b2eae14266")
                        },
                        new
                        {
                            Id = new Guid("b471c6d0-dab4-4dd5-8ccb-c62dc8420635"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 50000m,
                            Entry = 0,
                            RecordId = new Guid("39156453-a4ec-4f14-8dc4-c32e1080a628")
                        },
                        new
                        {
                            Id = new Guid("8dc46cd7-fa35-4b58-861b-2e289a55a947"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 40000m,
                            Entry = 1,
                            RecordId = new Guid("7c63311c-7069-4939-b47f-d1e23229c9fe")
                        },
                        new
                        {
                            Id = new Guid("3a1dc172-ab7f-4cf7-bbdb-134f901ef0af"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 30000m,
                            Entry = 0,
                            RecordId = new Guid("951b2f3b-3dbc-4c29-9e9e-d76a04a25771")
                        },
                        new
                        {
                            Id = new Guid("3f661820-d30d-4723-a08c-62dd4fed001c"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 20000m,
                            Entry = 1,
                            RecordId = new Guid("c6787d17-0732-4e96-b398-26ea932a2531")
                        },
                        new
                        {
                            Id = new Guid("7819ed05-ced1-4229-b29c-0b68af7d6b2f"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 210000m,
                            Entry = 0,
                            RecordId = new Guid("4d4ebf13-3071-4dec-a12a-1b153bda35ac")
                        },
                        new
                        {
                            Id = new Guid("1341e0af-5a88-4afa-98ec-ae81376e57c6"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 200000m,
                            Entry = 1,
                            RecordId = new Guid("6921907e-c03d-4c53-b168-edf5cf0dc250")
                        },
                        new
                        {
                            Id = new Guid("a18ae82d-9ae3-4598-a12c-40f0180c8d91"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 190000m,
                            Entry = 0,
                            RecordId = new Guid("711efa22-dab9-4bdc-9c78-27a1f7130d4a")
                        },
                        new
                        {
                            Id = new Guid("c73ab1f1-4559-490b-9d79-41b94032d452"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 180000m,
                            Entry = 1,
                            RecordId = new Guid("0233e2a2-1e8f-4c0e-9e2b-9040c84b409c")
                        },
                        new
                        {
                            Id = new Guid("c3143290-dd68-4b12-9ee6-e3d11c77f87f"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 170000m,
                            Entry = 0,
                            RecordId = new Guid("bee73a18-09a6-4114-b257-9e326b94230f")
                        },
                        new
                        {
                            Id = new Guid("0ea26f40-7eba-4d20-aa4e-5a7dc1925b57"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 160000m,
                            Entry = 1,
                            RecordId = new Guid("3a876adc-5526-4c05-8830-0ca239b0bc5b")
                        },
                        new
                        {
                            Id = new Guid("b3694acf-adbc-4952-92cb-605902ec88b0"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 150000m,
                            Entry = 0,
                            RecordId = new Guid("7af7e31b-5312-4d9b-a63b-a32f3f59dd53")
                        },
                        new
                        {
                            Id = new Guid("121b38d4-38d2-49e9-b55a-d2acd5696f5c"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 140000m,
                            Entry = 1,
                            RecordId = new Guid("dc2ab3c7-fcca-4963-b145-bdddfeaa58e5")
                        },
                        new
                        {
                            Id = new Guid("cdc4a57a-3fc8-4bdd-9e29-8bbc35ab89e5"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 130000m,
                            Entry = 0,
                            RecordId = new Guid("f3888595-ba54-4a9d-887b-350d9c696801")
                        },
                        new
                        {
                            Id = new Guid("e8520051-c92b-4574-9e5c-cb8386f8dc86"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 120000m,
                            Entry = 1,
                            RecordId = new Guid("3a4aa2e5-d176-4471-a71d-71b04edb2de3")
                        },
                        new
                        {
                            Id = new Guid("3f99d24a-f9ce-4bb8-b7dd-bab64ee41b25"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 110000m,
                            Entry = 0,
                            RecordId = new Guid("c2d9d56e-4128-4927-a245-3ee73024191b")
                        },
                        new
                        {
                            Id = new Guid("2200316a-c757-4865-b71e-d0100fb13b56"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 100000m,
                            Entry = 1,
                            RecordId = new Guid("32cd40b9-080a-4d03-b454-186df3737abb")
                        },
                        new
                        {
                            Id = new Guid("b09531fd-d450-403e-ac25-00739f64c25d"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 90000m,
                            Entry = 0,
                            RecordId = new Guid("caeee4b9-dfdd-498d-bebe-5f6022ae62f1")
                        },
                        new
                        {
                            Id = new Guid("85f796ae-b4cd-4348-a066-44d3fee43311"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 80000m,
                            Entry = 1,
                            RecordId = new Guid("8d318abc-22ae-4181-82f5-38f90a340b30")
                        },
                        new
                        {
                            Id = new Guid("d93b4c5a-695c-471c-a070-c1b18bf2001e"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 70000m,
                            Entry = 0,
                            RecordId = new Guid("69e4659a-8bc8-4bc8-aa74-cba0363ee64c")
                        },
                        new
                        {
                            Id = new Guid("830dcf0f-3c2e-4461-9a18-8efe2257506d"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 60000m,
                            Entry = 1,
                            RecordId = new Guid("8b9a4751-431c-41ad-99f8-cf85d49852ab")
                        },
                        new
                        {
                            Id = new Guid("12f0302a-3c79-49be-baf5-0d3afb86a33f"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 50000m,
                            Entry = 0,
                            RecordId = new Guid("11895422-29a2-4fba-a43a-478ed75fbda7")
                        },
                        new
                        {
                            Id = new Guid("7c961387-a6dd-466b-a6ac-5170873f56ea"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 40000m,
                            Entry = 1,
                            RecordId = new Guid("e6a62875-bba5-450f-8947-7a19b0682591")
                        },
                        new
                        {
                            Id = new Guid("fe7f0b72-0194-4d16-bb25-7ec5249530ac"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 30000m,
                            Entry = 0,
                            RecordId = new Guid("1d2b2a16-2d0a-4a48-8b1d-97ef604a9e4e")
                        },
                        new
                        {
                            Id = new Guid("dde447a4-4181-42f1-941e-75826d3b6877"),
                            AccountId = new Guid("4050088b-bd0b-4e58-97f4-be830cce69d6"),
                            Balance = 20000m,
                            Entry = 1,
                            RecordId = new Guid("f2999aae-df9f-4d2d-9fdc-57d500ffe3e5")
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Payable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid>("DebtorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("debtor_id");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("record_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("DebtorId");

                    b.HasIndex("RecordId")
                        .IsUnique();

                    b.HasIndex("RecordId", "DebtorId");

                    b.ToTable("payables");
                });

            modelBuilder.Entity("CoreCashApi.Entities.PayableLedger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("PayableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PayableId");

                    b.HasIndex("RecordId")
                        .IsUnique();

                    b.HasIndex("RecordId", "PayableId");

                    b.ToTable("payable_ledger");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Receivable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid>("CreditorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("creditor_id");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("record_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("CreditorId");

                    b.HasIndex("RecordId")
                        .IsUnique();

                    b.HasIndex("RecordId", "CreditorId");

                    b.ToTable("receivables");
                });

            modelBuilder.Entity("CoreCashApi.Entities.ReceivableLedger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ReceivableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReceivableId")
                        .IsUnique();

                    b.HasIndex("RecordId", "ReceivableId");

                    b.ToTable("receivable_ledger");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("RecordGroup")
                        .HasColumnType("int")
                        .HasColumnName("record_group");

                    b.Property<DateTime>("RecordedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("recorded_at");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("records");

                    b.HasData(
                        new
                        {
                            Id = new Guid("af12ce69-9567-41fc-b0f5-fe40ebe8c736"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7576),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7563),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7576),
                            UserId = new Guid("3d776ada-d0e7-477d-a339-a4e20f7ee9d6")
                        },
                        new
                        {
                            Id = new Guid("c8dc1544-f9d0-4bcb-91dd-f1801af7a063"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7583),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7583),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7583),
                            UserId = new Guid("3d776ada-d0e7-477d-a339-a4e20f7ee9d6")
                        },
                        new
                        {
                            Id = new Guid("54398122-ddbb-4327-bb2e-a9abb8188e19"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7586),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7585),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7586),
                            UserId = new Guid("3d776ada-d0e7-477d-a339-a4e20f7ee9d6")
                        },
                        new
                        {
                            Id = new Guid("151cb60c-273b-4745-afb2-0d6db7d0780a"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7589),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7589),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7589),
                            UserId = new Guid("3d776ada-d0e7-477d-a339-a4e20f7ee9d6")
                        },
                        new
                        {
                            Id = new Guid("00b47351-5a1a-4c11-94c0-04b01c4dfa0e"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7594),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7594),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7595),
                            UserId = new Guid("3d776ada-d0e7-477d-a339-a4e20f7ee9d6")
                        },
                        new
                        {
                            Id = new Guid("b899a460-1e38-4605-9532-4d323fe73610"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7598),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7597),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7598),
                            UserId = new Guid("3d776ada-d0e7-477d-a339-a4e20f7ee9d6")
                        },
                        new
                        {
                            Id = new Guid("9d4f6acb-62b4-4024-8130-137764e9f7dc"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7600),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7600),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7601),
                            UserId = new Guid("3d776ada-d0e7-477d-a339-a4e20f7ee9d6")
                        },
                        new
                        {
                            Id = new Guid("7c4704e5-feac-49ed-9f69-6bc06da3730e"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7603),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7603),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7604),
                            UserId = new Guid("3d776ada-d0e7-477d-a339-a4e20f7ee9d6")
                        },
                        new
                        {
                            Id = new Guid("2dafd583-139e-4227-b2d3-f5272a4d3eba"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7608),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7608),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7608),
                            UserId = new Guid("3d776ada-d0e7-477d-a339-a4e20f7ee9d6")
                        },
                        new
                        {
                            Id = new Guid("42aa4840-e4f9-4c1a-aed4-c9ff6429a80b"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7652),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7651),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7652),
                            UserId = new Guid("3d776ada-d0e7-477d-a339-a4e20f7ee9d6")
                        },
                        new
                        {
                            Id = new Guid("942120c3-09aa-492b-9212-a286a65a9d6b"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7655),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7654),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7655),
                            UserId = new Guid("3d776ada-d0e7-477d-a339-a4e20f7ee9d6")
                        },
                        new
                        {
                            Id = new Guid("fb0ce76b-9c79-4616-be7f-85ae028f9267"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7658),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7657),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7658),
                            UserId = new Guid("3d776ada-d0e7-477d-a339-a4e20f7ee9d6")
                        },
                        new
                        {
                            Id = new Guid("4cf99914-a41e-4f92-9387-3845ab897220"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7663),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7663),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7663),
                            UserId = new Guid("3d776ada-d0e7-477d-a339-a4e20f7ee9d6")
                        },
                        new
                        {
                            Id = new Guid("7384ed80-9d6a-4342-8e28-6e93b163907e"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7666),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7665),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7666),
                            UserId = new Guid("3d776ada-d0e7-477d-a339-a4e20f7ee9d6")
                        },
                        new
                        {
                            Id = new Guid("a59253e5-8730-4667-aff8-74e1919f2475"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7669),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7668),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7669),
                            UserId = new Guid("3d776ada-d0e7-477d-a339-a4e20f7ee9d6")
                        },
                        new
                        {
                            Id = new Guid("f551f791-920e-48c2-9f5f-06b2eae14266"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7672),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7671),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7672),
                            UserId = new Guid("3d776ada-d0e7-477d-a339-a4e20f7ee9d6")
                        },
                        new
                        {
                            Id = new Guid("39156453-a4ec-4f14-8dc4-c32e1080a628"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7676),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7676),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7676),
                            UserId = new Guid("3d776ada-d0e7-477d-a339-a4e20f7ee9d6")
                        },
                        new
                        {
                            Id = new Guid("7c63311c-7069-4939-b47f-d1e23229c9fe"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7679),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7678),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7679),
                            UserId = new Guid("3d776ada-d0e7-477d-a339-a4e20f7ee9d6")
                        },
                        new
                        {
                            Id = new Guid("951b2f3b-3dbc-4c29-9e9e-d76a04a25771"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7682),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7681),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7682),
                            UserId = new Guid("3d776ada-d0e7-477d-a339-a4e20f7ee9d6")
                        },
                        new
                        {
                            Id = new Guid("c6787d17-0732-4e96-b398-26ea932a2531"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7684),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7684),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7684),
                            UserId = new Guid("3d776ada-d0e7-477d-a339-a4e20f7ee9d6")
                        },
                        new
                        {
                            Id = new Guid("4d4ebf13-3071-4dec-a12a-1b153bda35ac"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7731),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7730),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7731),
                            UserId = new Guid("df7ff2b9-af90-4c5f-9c40-2b00a4adfff3")
                        },
                        new
                        {
                            Id = new Guid("6921907e-c03d-4c53-b168-edf5cf0dc250"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7734),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7733),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7734),
                            UserId = new Guid("df7ff2b9-af90-4c5f-9c40-2b00a4adfff3")
                        },
                        new
                        {
                            Id = new Guid("711efa22-dab9-4bdc-9c78-27a1f7130d4a"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7737),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7736),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7737),
                            UserId = new Guid("df7ff2b9-af90-4c5f-9c40-2b00a4adfff3")
                        },
                        new
                        {
                            Id = new Guid("0233e2a2-1e8f-4c0e-9e2b-9040c84b409c"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7739),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7739),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7740),
                            UserId = new Guid("df7ff2b9-af90-4c5f-9c40-2b00a4adfff3")
                        },
                        new
                        {
                            Id = new Guid("bee73a18-09a6-4114-b257-9e326b94230f"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7744),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7744),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7745),
                            UserId = new Guid("df7ff2b9-af90-4c5f-9c40-2b00a4adfff3")
                        },
                        new
                        {
                            Id = new Guid("3a876adc-5526-4c05-8830-0ca239b0bc5b"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7747),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7747),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7747),
                            UserId = new Guid("df7ff2b9-af90-4c5f-9c40-2b00a4adfff3")
                        },
                        new
                        {
                            Id = new Guid("7af7e31b-5312-4d9b-a63b-a32f3f59dd53"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7750),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7749),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7750),
                            UserId = new Guid("df7ff2b9-af90-4c5f-9c40-2b00a4adfff3")
                        },
                        new
                        {
                            Id = new Guid("dc2ab3c7-fcca-4963-b145-bdddfeaa58e5"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7752),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7752),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7753),
                            UserId = new Guid("df7ff2b9-af90-4c5f-9c40-2b00a4adfff3")
                        },
                        new
                        {
                            Id = new Guid("f3888595-ba54-4a9d-887b-350d9c696801"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7757),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7757),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7757),
                            UserId = new Guid("df7ff2b9-af90-4c5f-9c40-2b00a4adfff3")
                        },
                        new
                        {
                            Id = new Guid("3a4aa2e5-d176-4471-a71d-71b04edb2de3"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7760),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7759),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7760),
                            UserId = new Guid("df7ff2b9-af90-4c5f-9c40-2b00a4adfff3")
                        },
                        new
                        {
                            Id = new Guid("c2d9d56e-4128-4927-a245-3ee73024191b"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7763),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7762),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7763),
                            UserId = new Guid("df7ff2b9-af90-4c5f-9c40-2b00a4adfff3")
                        },
                        new
                        {
                            Id = new Guid("32cd40b9-080a-4d03-b454-186df3737abb"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7765),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7765),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7765),
                            UserId = new Guid("df7ff2b9-af90-4c5f-9c40-2b00a4adfff3")
                        },
                        new
                        {
                            Id = new Guid("caeee4b9-dfdd-498d-bebe-5f6022ae62f1"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7770),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7770),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7770),
                            UserId = new Guid("df7ff2b9-af90-4c5f-9c40-2b00a4adfff3")
                        },
                        new
                        {
                            Id = new Guid("8d318abc-22ae-4181-82f5-38f90a340b30"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7798),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7798),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7798),
                            UserId = new Guid("df7ff2b9-af90-4c5f-9c40-2b00a4adfff3")
                        },
                        new
                        {
                            Id = new Guid("69e4659a-8bc8-4bc8-aa74-cba0363ee64c"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7801),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7800),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7801),
                            UserId = new Guid("df7ff2b9-af90-4c5f-9c40-2b00a4adfff3")
                        },
                        new
                        {
                            Id = new Guid("8b9a4751-431c-41ad-99f8-cf85d49852ab"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7804),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7803),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7804),
                            UserId = new Guid("df7ff2b9-af90-4c5f-9c40-2b00a4adfff3")
                        },
                        new
                        {
                            Id = new Guid("11895422-29a2-4fba-a43a-478ed75fbda7"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7808),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7808),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7809),
                            UserId = new Guid("df7ff2b9-af90-4c5f-9c40-2b00a4adfff3")
                        },
                        new
                        {
                            Id = new Guid("e6a62875-bba5-450f-8947-7a19b0682591"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7811),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7811),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7811),
                            UserId = new Guid("df7ff2b9-af90-4c5f-9c40-2b00a4adfff3")
                        },
                        new
                        {
                            Id = new Guid("1d2b2a16-2d0a-4a48-8b1d-97ef604a9e4e"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7814),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7813),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7814),
                            UserId = new Guid("df7ff2b9-af90-4c5f-9c40-2b00a4adfff3")
                        },
                        new
                        {
                            Id = new Guid("f2999aae-df9f-4d2d-9fdc-57d500ffe3e5"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7817),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 13, 22, 14, 3, 886, DateTimeKind.Local).AddTicks(7816),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7817),
                            UserId = new Guid("df7ff2b9-af90-4c5f-9c40-2b00a4adfff3")
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("795b1227-89e3-4686-a9fa-4ca0a8646be5"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(6266),
                            Name = "ROLE_ADMIN",
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(6270)
                        },
                        new
                        {
                            Id = new Guid("07b959e6-02a9-4d51-92af-23acbbb8fa84"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(6309),
                            Name = "ROLE_USER",
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(6309)
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("full_name");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("password_hash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("password_salt");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("profile_picture");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("refresh_token");

                    b.Property<string>("ResetPasswordToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("reset_password_token");

                    b.Property<DateTime>("ResetTokenExpires")
                        .HasColumnType("datetime2")
                        .HasColumnName("reset_token_expires");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("role_id");

                    b.Property<DateTime>("TokenExpires")
                        .HasColumnType("datetime2")
                        .HasColumnName("token_expires");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("VerificationToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("verification_token");

                    b.Property<DateTime>("VerifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("verified_at");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2675e3b9-1af8-4224-8efd-3c49042e27e0"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7477),
                            Email = "admin1@example.com",
                            FullName = "Admin Satu",
                            PasswordHash = new byte[] { 104, 181, 250, 19, 18, 216, 231, 68, 160, 250, 43, 181, 154, 103, 225, 152, 67, 161, 217, 176, 157, 148, 18, 148, 49, 121, 0, 49, 109, 158, 98, 50 },
                            PasswordSalt = new byte[] { 158, 153, 67, 146, 58, 8, 219, 37, 186, 245, 252, 165, 52, 105, 36, 75, 163, 221, 222, 151, 200, 130, 57, 91, 9, 239, 199, 159, 106, 255, 228, 193, 31, 51, 19, 198, 93, 36, 177, 91, 46, 178, 213, 181, 120, 140, 72, 7, 218, 188, 36, 0, 137, 99, 220, 211, 66, 185, 77, 200, 238, 10, 107, 56 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("795b1227-89e3-4686-a9fa-4ca0a8646be5"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7479),
                            VerifiedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7477)
                        },
                        new
                        {
                            Id = new Guid("8a7322fe-e74d-46c7-a198-6e8884e69371"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7482),
                            Email = "admin2@example.com",
                            FullName = "Admin Dua",
                            PasswordHash = new byte[] { 104, 181, 250, 19, 18, 216, 231, 68, 160, 250, 43, 181, 154, 103, 225, 152, 67, 161, 217, 176, 157, 148, 18, 148, 49, 121, 0, 49, 109, 158, 98, 50 },
                            PasswordSalt = new byte[] { 158, 153, 67, 146, 58, 8, 219, 37, 186, 245, 252, 165, 52, 105, 36, 75, 163, 221, 222, 151, 200, 130, 57, 91, 9, 239, 199, 159, 106, 255, 228, 193, 31, 51, 19, 198, 93, 36, 177, 91, 46, 178, 213, 181, 120, 140, 72, 7, 218, 188, 36, 0, 137, 99, 220, 211, 66, 185, 77, 200, 238, 10, 107, 56 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("795b1227-89e3-4686-a9fa-4ca0a8646be5"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7482),
                            VerifiedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7481)
                        },
                        new
                        {
                            Id = new Guid("3d776ada-d0e7-477d-a339-a4e20f7ee9d6"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7485),
                            Email = "user1@example.com",
                            FullName = "User Satu",
                            PasswordHash = new byte[] { 104, 181, 250, 19, 18, 216, 231, 68, 160, 250, 43, 181, 154, 103, 225, 152, 67, 161, 217, 176, 157, 148, 18, 148, 49, 121, 0, 49, 109, 158, 98, 50 },
                            PasswordSalt = new byte[] { 158, 153, 67, 146, 58, 8, 219, 37, 186, 245, 252, 165, 52, 105, 36, 75, 163, 221, 222, 151, 200, 130, 57, 91, 9, 239, 199, 159, 106, 255, 228, 193, 31, 51, 19, 198, 93, 36, 177, 91, 46, 178, 213, 181, 120, 140, 72, 7, 218, 188, 36, 0, 137, 99, 220, 211, 66, 185, 77, 200, 238, 10, 107, 56 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("07b959e6-02a9-4d51-92af-23acbbb8fa84"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7485),
                            VerifiedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7484)
                        },
                        new
                        {
                            Id = new Guid("df7ff2b9-af90-4c5f-9c40-2b00a4adfff3"),
                            CreatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7487),
                            Email = "user2@example.com",
                            FullName = "User Dua",
                            PasswordHash = new byte[] { 104, 181, 250, 19, 18, 216, 231, 68, 160, 250, 43, 181, 154, 103, 225, 152, 67, 161, 217, 176, 157, 148, 18, 148, 49, 121, 0, 49, 109, 158, 98, 50 },
                            PasswordSalt = new byte[] { 158, 153, 67, 146, 58, 8, 219, 37, 186, 245, 252, 165, 52, 105, 36, 75, 163, 221, 222, 151, 200, 130, 57, 91, 9, 239, 199, 159, 106, 255, 228, 193, 31, 51, 19, 198, 93, 36, 177, 91, 46, 178, 213, 181, 120, 140, 72, 7, 218, 188, 36, 0, 137, 99, 220, 211, 66, 185, 77, 200, 238, 10, 107, 56 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("07b959e6-02a9-4d51-92af-23acbbb8fa84"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7488),
                            VerifiedAt = new DateTime(2023, 7, 13, 15, 14, 3, 886, DateTimeKind.Utc).AddTicks(7487)
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Contact", b =>
                {
                    b.HasOne("CoreCashApi.Entities.User", "User")
                        .WithMany("Contacts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Ledger", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Account", "Account")
                        .WithMany("Ledgers")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithMany("Ledgers")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Payable", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Contact", "Debtor")
                        .WithMany("Payables")
                        .HasForeignKey("DebtorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithOne("Payable")
                        .HasForeignKey("CoreCashApi.Entities.Payable", "RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Debtor");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.PayableLedger", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Payable", "Payable")
                        .WithMany("PayableLedgers")
                        .HasForeignKey("PayableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithOne("PayableLedger")
                        .HasForeignKey("CoreCashApi.Entities.PayableLedger", "RecordId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Payable");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Receivable", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Contact", "Creditor")
                        .WithMany("Receivables")
                        .HasForeignKey("CreditorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithOne("Receivable")
                        .HasForeignKey("CoreCashApi.Entities.Receivable", "RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creditor");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.ReceivableLedger", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Receivable", "Receivable")
                        .WithMany("ReceivableLedgers")
                        .HasForeignKey("ReceivableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithOne("ReceivableLedger")
                        .HasForeignKey("CoreCashApi.Entities.ReceivableLedger", "ReceivableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Receivable");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Record", b =>
                {
                    b.HasOne("CoreCashApi.Entities.User", "User")
                        .WithMany("Records")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoreCashApi.Entities.User", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Account", b =>
                {
                    b.Navigation("Ledgers");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Contact", b =>
                {
                    b.Navigation("Payables");

                    b.Navigation("Receivables");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Payable", b =>
                {
                    b.Navigation("PayableLedgers");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Receivable", b =>
                {
                    b.Navigation("ReceivableLedgers");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Record", b =>
                {
                    b.Navigation("Ledgers");

                    b.Navigation("Payable");

                    b.Navigation("PayableLedger");

                    b.Navigation("Receivable");

                    b.Navigation("ReceivableLedger");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CoreCashApi.Entities.User", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Records");
                });
#pragma warning restore 612, 618
        }
    }
}
