// <auto-generated />
using System;
using CoreCashApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoreCashApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230715103359_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CoreCashApi.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<int>("AccountCode")
                        .HasColumnType("int")
                        .HasColumnName("account_code");

                    b.Property<int>("AccountGroup")
                        .HasColumnType("int")
                        .HasColumnName("account_group");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("account_name");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            AccountCode = 11001,
                            AccountGroup = 11,
                            AccountName = "CASH",
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3566),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3566)
                        },
                        new
                        {
                            Id = new Guid("936352ff-7ef5-44e8-8bda-1574cf67c8ac"),
                            AccountCode = 11005,
                            AccountGroup = 11,
                            AccountName = "RECEIVABLE",
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3568),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3569)
                        },
                        new
                        {
                            Id = new Guid("b9a663f1-0fcd-46c4-873b-d49edb7b7430"),
                            AccountCode = 21001,
                            AccountGroup = 21,
                            AccountName = "PAYABLE",
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3570),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3570)
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("phone_number");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("UserId");

                    b.ToTable("contacts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8ee4adf0-af8d-4a16-bf76-e1170e1e2dfa"),
                            Address = "620 Lakeland Center",
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3832),
                            Email = "rhavock0@gov.uk",
                            Name = "Randell Havock",
                            PhoneNumber = "6765109874",
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3832),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("6cc86818-4984-463d-8658-5dcc989fc9bd"),
                            Address = "34 Eastwood Avenue",
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3859),
                            Email = "smahood1@wufoo.com",
                            Name = "Sarine Mahood",
                            PhoneNumber = "6977095403",
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3859),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("b687fab1-1f9d-4d66-b0d6-3521011199b2"),
                            Address = "17 Onsgard Avenue",
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3864),
                            Email = "bmcging2@ihg.com",
                            Name = "Benjie McGing",
                            PhoneNumber = "5025308916",
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3864),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("e9ed3ad3-f0fc-4146-8864-2403287ef7c7"),
                            Address = "96 Summerview Drive",
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3865),
                            Email = "klanphere3@upenn.edu",
                            Name = "Kev Lanphere",
                            PhoneNumber = "7268834724",
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3865),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("1fd90831-853b-4527-bf78-7a6374f1c7b3"),
                            Address = "39494 Kartens Terrace",
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3867),
                            Email = "sblanchard4@vinaora.com",
                            Name = "Sal Blanchard",
                            PhoneNumber = "4904310249",
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3867),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("3bbb3bc1-549d-40b8-915d-811ded432a47"),
                            Address = "615 Jenifer Alley",
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3869),
                            Email = "ldunster5@marketwatch.com",
                            Name = "Laurette Dunster",
                            PhoneNumber = "7678939672",
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3869),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("7803a8d9-a950-4ebb-953b-f003b170cd30"),
                            Address = "4649 Swallow Trail",
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3870),
                            Email = "tshew6@tripadvisor.com",
                            Name = "Tiphany Shew",
                            PhoneNumber = "1457940882",
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3871),
                            UserId = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33")
                        },
                        new
                        {
                            Id = new Guid("10c7eb86-827e-46da-813a-23f83d0f23be"),
                            Address = "10 Calypso Center",
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3872),
                            Email = "candrelli7@intel.com",
                            Name = "Ceil Andrelli",
                            PhoneNumber = "1401949061",
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3872),
                            UserId = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33")
                        },
                        new
                        {
                            Id = new Guid("c73e776c-251c-433b-9771-29b114fc0740"),
                            Address = "11 Old Shore Terrace",
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3874),
                            Email = "msivorn8@icq.com",
                            Name = "Margaretta Sivorn",
                            PhoneNumber = "5311644464",
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3874),
                            UserId = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33")
                        },
                        new
                        {
                            Id = new Guid("02839cac-9434-48f1-a965-3ad3191c92e9"),
                            Address = "4330 Doe Crossing Junction",
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3875),
                            Email = "vwoodsford9@issuu.com",
                            Name = "Vasilis Woodsford",
                            PhoneNumber = "8364764344",
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3876),
                            UserId = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33")
                        },
                        new
                        {
                            Id = new Guid("99409d94-efe9-469b-b56e-bd1c93bcaea7"),
                            Address = "54 Redwing Drive",
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3879),
                            Email = "jorneblowa@youtube.com",
                            Name = "Jennee Orneblow",
                            PhoneNumber = "9316403125",
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3879),
                            UserId = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33")
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Ledger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("account_id");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("balance");

                    b.Property<int>("Entry")
                        .HasColumnType("int")
                        .HasColumnName("entry");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("record_id");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("RecordId", "AccountId");

                    b.ToTable("ledgers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("85a5bb84-a4fc-475d-9d63-3ff8cacccfe3"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 210000m,
                            Entry = 0,
                            RecordId = new Guid("76015793-bb6b-4ba9-8329-328d853b5c33")
                        },
                        new
                        {
                            Id = new Guid("af0c30e2-f633-4232-b6f6-87a622dd40f8"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 200000m,
                            Entry = 1,
                            RecordId = new Guid("f0911fdd-54ba-444a-aa3c-21b325897b01")
                        },
                        new
                        {
                            Id = new Guid("18f4a21a-6476-4fb6-8a2f-deefd116b5d6"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 190000m,
                            Entry = 0,
                            RecordId = new Guid("9be5ee26-e44f-44cc-ad2c-be55e7ba8286")
                        },
                        new
                        {
                            Id = new Guid("155a0eb1-7402-4280-a4c5-103dcea3e141"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 180000m,
                            Entry = 1,
                            RecordId = new Guid("adc242e1-0ec5-46e5-8471-f3359a9506f9")
                        },
                        new
                        {
                            Id = new Guid("1fb0c03c-89af-4e1f-98e5-d5d33c3e04b7"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 170000m,
                            Entry = 0,
                            RecordId = new Guid("9ee56887-4bb4-4d20-aa5d-a787028fd364")
                        },
                        new
                        {
                            Id = new Guid("14f09a31-9fd2-4cde-b237-af8e57f9ca58"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 160000m,
                            Entry = 1,
                            RecordId = new Guid("648b5fbe-1eac-45df-b735-5ead6f29dde4")
                        },
                        new
                        {
                            Id = new Guid("f9f24682-93e2-4e11-958c-1cb0a453bfae"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 150000m,
                            Entry = 0,
                            RecordId = new Guid("ad079156-1986-4051-a194-73164a8fb277")
                        },
                        new
                        {
                            Id = new Guid("11102969-454e-4065-827f-87008fc13e81"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 140000m,
                            Entry = 1,
                            RecordId = new Guid("db49fb4a-a0c1-43ca-8555-2c1334778642")
                        },
                        new
                        {
                            Id = new Guid("9663f5d0-db05-4770-a709-04eb8427ea49"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 130000m,
                            Entry = 0,
                            RecordId = new Guid("d485212e-8a9f-4f31-a3e9-2306445cd9fb")
                        },
                        new
                        {
                            Id = new Guid("9a580471-581e-47a5-ab13-d15fda195919"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 120000m,
                            Entry = 1,
                            RecordId = new Guid("5312c3d5-7023-4cef-bbf8-68266b87d09d")
                        },
                        new
                        {
                            Id = new Guid("fb9b7c1f-a724-41d2-addf-9049c6dfa088"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 110000m,
                            Entry = 0,
                            RecordId = new Guid("0a8004a6-7b37-488c-9bd5-90b9de27d634")
                        },
                        new
                        {
                            Id = new Guid("a9fd0a70-cf08-41a1-838e-fbdea5b2343e"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 100000m,
                            Entry = 1,
                            RecordId = new Guid("508af46d-56e6-4321-81a1-c7a0ff1e62bf")
                        },
                        new
                        {
                            Id = new Guid("7d52b52b-3fab-489b-9e00-be26f32314ed"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 90000m,
                            Entry = 0,
                            RecordId = new Guid("5e675c9f-0423-4fad-9688-82146ffc1301")
                        },
                        new
                        {
                            Id = new Guid("08529493-e808-47f1-8ec6-a11f09e9c649"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 80000m,
                            Entry = 1,
                            RecordId = new Guid("88adf5ae-a0de-4a95-b00c-b129ceddd904")
                        },
                        new
                        {
                            Id = new Guid("91855855-d30d-48f7-b798-1d95de9fc19c"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 70000m,
                            Entry = 0,
                            RecordId = new Guid("72e5b4be-432c-421b-8691-952ec02ebf99")
                        },
                        new
                        {
                            Id = new Guid("0047943d-514b-40e1-9f84-9579fbbc8c0c"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 60000m,
                            Entry = 1,
                            RecordId = new Guid("dffd0cc7-7406-410c-94f5-ed684036331b")
                        },
                        new
                        {
                            Id = new Guid("77d76989-1777-48bf-a73b-6b4289443f73"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 50000m,
                            Entry = 0,
                            RecordId = new Guid("e5fa2070-acf8-4c5a-a637-c7dc01a2ab1e")
                        },
                        new
                        {
                            Id = new Guid("0263c3ea-61e1-4f77-a21c-8279fe57a467"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 40000m,
                            Entry = 1,
                            RecordId = new Guid("0ed14b88-7e77-4e32-8a69-585b9d5d16d6")
                        },
                        new
                        {
                            Id = new Guid("a35cd7fa-46e3-4c39-9b6e-e1a0e66a1123"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 30000m,
                            Entry = 0,
                            RecordId = new Guid("8fc86498-5866-4db3-a3fb-11c145501e0a")
                        },
                        new
                        {
                            Id = new Guid("5c3dc1d0-0d4b-44ea-8830-f1852902ca21"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 20000m,
                            Entry = 1,
                            RecordId = new Guid("6f40e3d1-e093-4064-8d03-740020269efd")
                        },
                        new
                        {
                            Id = new Guid("7233179d-761e-448a-ba67-535406bdd635"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 210000m,
                            Entry = 0,
                            RecordId = new Guid("75543645-00c0-477d-9232-58c0b4d2b125")
                        },
                        new
                        {
                            Id = new Guid("4709170b-ec62-43d1-84ff-c48541b1cbad"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 200000m,
                            Entry = 1,
                            RecordId = new Guid("e2e3d2eb-b43a-4eb4-9aa3-ac9483ec4060")
                        },
                        new
                        {
                            Id = new Guid("9b28d615-f65c-4781-953b-85b431103eb1"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 190000m,
                            Entry = 0,
                            RecordId = new Guid("6afa484d-8909-4cb8-8445-2d8efe170e5e")
                        },
                        new
                        {
                            Id = new Guid("a245dc55-8800-4d2e-9125-aa03040d6623"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 180000m,
                            Entry = 1,
                            RecordId = new Guid("1acd963e-cb2b-4a5a-83ac-6d5d3a1cfa03")
                        },
                        new
                        {
                            Id = new Guid("c2d9e0fa-f3d0-482d-9092-85ac8f43277f"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 170000m,
                            Entry = 0,
                            RecordId = new Guid("19487ce2-3653-4d77-8ac7-7b2df5c803ae")
                        },
                        new
                        {
                            Id = new Guid("bd4a47f4-a429-4506-b402-fa795c01daba"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 160000m,
                            Entry = 1,
                            RecordId = new Guid("ac589c83-b25a-49ff-9998-d46278f54e1a")
                        },
                        new
                        {
                            Id = new Guid("30be721f-75eb-43ed-ac5a-4a840ddfce29"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 150000m,
                            Entry = 0,
                            RecordId = new Guid("7be62ac8-8472-4a03-b896-1a3e7939142f")
                        },
                        new
                        {
                            Id = new Guid("628d11c4-f96e-4263-a546-6d50b3b5b919"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 140000m,
                            Entry = 1,
                            RecordId = new Guid("91ff9e4c-b308-4f21-8f21-eab3f30cc546")
                        },
                        new
                        {
                            Id = new Guid("ca903358-5087-4264-852f-8ccfa124e636"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 130000m,
                            Entry = 0,
                            RecordId = new Guid("26eeddba-dafc-4c4f-848a-d57a61b47476")
                        },
                        new
                        {
                            Id = new Guid("d1303649-00b7-40bd-9011-e7bcc0427439"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 120000m,
                            Entry = 1,
                            RecordId = new Guid("8a56e9de-6e5e-44a9-8afb-3148ec63b529")
                        },
                        new
                        {
                            Id = new Guid("bc23f7e9-d9b6-47db-b655-44f7075d0af8"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 110000m,
                            Entry = 0,
                            RecordId = new Guid("cfcc0ee3-8e70-4a36-b938-bb72077df6c5")
                        },
                        new
                        {
                            Id = new Guid("0c8924f2-0cae-4a6c-91c2-5d13115187dc"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 100000m,
                            Entry = 1,
                            RecordId = new Guid("a843434a-91b8-449c-881f-ead30e9773d7")
                        },
                        new
                        {
                            Id = new Guid("dba86fc9-a30f-4181-968e-58a059516b97"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 90000m,
                            Entry = 0,
                            RecordId = new Guid("f3007be4-d064-40d3-bb07-f22241db0f7c")
                        },
                        new
                        {
                            Id = new Guid("ec77f8d9-28fd-49c5-95e7-bf418b83a225"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 80000m,
                            Entry = 1,
                            RecordId = new Guid("47c884a9-0c86-4e10-a1f8-a0cd18fdaf51")
                        },
                        new
                        {
                            Id = new Guid("2a6fe932-e1f6-4a27-939d-0ae998a7db2f"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 70000m,
                            Entry = 0,
                            RecordId = new Guid("ad6c8cf8-3a07-4512-907c-b2c0c74c7adf")
                        },
                        new
                        {
                            Id = new Guid("05c16cde-2aeb-47f7-846d-d4b884f9b8ee"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 60000m,
                            Entry = 1,
                            RecordId = new Guid("2e2d80c4-19ea-4b6c-aedf-9b289b89bb14")
                        },
                        new
                        {
                            Id = new Guid("0ed95e68-6c97-4322-b730-f5732939e2ae"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 50000m,
                            Entry = 0,
                            RecordId = new Guid("b8c34d66-7b25-42f9-a956-947f9b5fa4d2")
                        },
                        new
                        {
                            Id = new Guid("1d91615b-fca5-46d4-a18a-471e6553204b"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 40000m,
                            Entry = 1,
                            RecordId = new Guid("baa1996d-741b-4551-b047-0b391bd4fea0")
                        },
                        new
                        {
                            Id = new Guid("f01b373a-544e-4293-96b9-fdef4ad064e2"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 30000m,
                            Entry = 0,
                            RecordId = new Guid("fe19c737-818d-4e8e-9d24-73fcfe488eb4")
                        },
                        new
                        {
                            Id = new Guid("3013eebe-47a1-46ba-8ba3-cc2bf09b2c8a"),
                            AccountId = new Guid("615d9ec7-42f2-44e6-a0dd-a2480ce1ccd6"),
                            Balance = 20000m,
                            Entry = 1,
                            RecordId = new Guid("9eb8807e-8ba7-4114-b4ac-0b166242243b")
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Payable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid>("CreditorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("debtor_id");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("record_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("CreditorId");

                    b.HasIndex("RecordId")
                        .IsUnique();

                    b.HasIndex("RecordId", "CreditorId");

                    b.ToTable("payables");
                });

            modelBuilder.Entity("CoreCashApi.Entities.PayableLedger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("PayableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PayableId");

                    b.HasIndex("RecordId")
                        .IsUnique();

                    b.HasIndex("RecordId", "PayableId");

                    b.ToTable("payable_ledger");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Receivable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<Guid>("DebtorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("creditor_id");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("record_id");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("DebtorId");

                    b.HasIndex("RecordId")
                        .IsUnique();

                    b.HasIndex("RecordId", "DebtorId");

                    b.ToTable("receivables");
                });

            modelBuilder.Entity("CoreCashApi.Entities.ReceivableLedger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ReceivableId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReceivableId");

                    b.HasIndex("RecordId")
                        .IsUnique();

                    b.HasIndex("RecordId", "ReceivableId");

                    b.ToTable("receivable_ledger");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("RecordGroup")
                        .HasColumnType("int")
                        .HasColumnName("record_group");

                    b.Property<DateTime>("RecordedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("recorded_at");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("records");

                    b.HasData(
                        new
                        {
                            Id = new Guid("76015793-bb6b-4ba9-8329-328d853b5c33"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3603),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3591),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3603),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("f0911fdd-54ba-444a-aa3c-21b325897b01"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3617),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3617),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3618),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("9be5ee26-e44f-44cc-ad2c-be55e7ba8286"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3620),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3620),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3621),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("adc242e1-0ec5-46e5-8471-f3359a9506f9"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3623),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3623),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3624),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("9ee56887-4bb4-4d20-aa5d-a787028fd364"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3626),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3626),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3627),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("648b5fbe-1eac-45df-b735-5ead6f29dde4"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3632),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3631),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3632),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("ad079156-1986-4051-a194-73164a8fb277"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3635),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3634),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3635),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("db49fb4a-a0c1-43ca-8555-2c1334778642"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3638),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3637),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3638),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("d485212e-8a9f-4f31-a3e9-2306445cd9fb"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3641),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3640),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3641),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("5312c3d5-7023-4cef-bbf8-68266b87d09d"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3645),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3645),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3646),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("0a8004a6-7b37-488c-9bd5-90b9de27d634"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3648),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3648),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3648),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("508af46d-56e6-4321-81a1-c7a0ff1e62bf"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3651),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3651),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3651),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("5e675c9f-0423-4fad-9688-82146ffc1301"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3654),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3653),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3654),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("88adf5ae-a0de-4a95-b00c-b129ceddd904"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3659),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3658),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3659),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("72e5b4be-432c-421b-8691-952ec02ebf99"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3661),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3661),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3662),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("dffd0cc7-7406-410c-94f5-ed684036331b"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3664),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3664),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3664),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("e5fa2070-acf8-4c5a-a637-c7dc01a2ab1e"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3667),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3666),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3667),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("0ed14b88-7e77-4e32-8a69-585b9d5d16d6"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3672),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3671),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3672),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("8fc86498-5866-4db3-a3fb-11c145501e0a"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3674),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3674),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3675),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("6f40e3d1-e093-4064-8d03-740020269efd"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3677),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3677),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3678),
                            UserId = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d")
                        },
                        new
                        {
                            Id = new Guid("75543645-00c0-477d-9232-58c0b4d2b125"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3742),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3742),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3742),
                            UserId = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33")
                        },
                        new
                        {
                            Id = new Guid("e2e3d2eb-b43a-4eb4-9aa3-ac9483ec4060"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3747),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3747),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3748),
                            UserId = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33")
                        },
                        new
                        {
                            Id = new Guid("6afa484d-8909-4cb8-8445-2d8efe170e5e"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3751),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3750),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3751),
                            UserId = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33")
                        },
                        new
                        {
                            Id = new Guid("1acd963e-cb2b-4a5a-83ac-6d5d3a1cfa03"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3753),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3753),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3754),
                            UserId = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33")
                        },
                        new
                        {
                            Id = new Guid("19487ce2-3653-4d77-8ac7-7b2df5c803ae"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3756),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3756),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3756),
                            UserId = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33")
                        },
                        new
                        {
                            Id = new Guid("ac589c83-b25a-49ff-9998-d46278f54e1a"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3761),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3760),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3761),
                            UserId = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33")
                        },
                        new
                        {
                            Id = new Guid("7be62ac8-8472-4a03-b896-1a3e7939142f"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3764),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3763),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3764),
                            UserId = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33")
                        },
                        new
                        {
                            Id = new Guid("91ff9e4c-b308-4f21-8f21-eab3f30cc546"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3766),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3766),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3767),
                            UserId = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33")
                        },
                        new
                        {
                            Id = new Guid("26eeddba-dafc-4c4f-848a-d57a61b47476"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3769),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3769),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3769),
                            UserId = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33")
                        },
                        new
                        {
                            Id = new Guid("8a56e9de-6e5e-44a9-8afb-3148ec63b529"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3774),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3773),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3774),
                            UserId = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33")
                        },
                        new
                        {
                            Id = new Guid("cfcc0ee3-8e70-4a36-b938-bb72077df6c5"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3776),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3776),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3777),
                            UserId = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33")
                        },
                        new
                        {
                            Id = new Guid("a843434a-91b8-449c-881f-ead30e9773d7"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3779),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3779),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3780),
                            UserId = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33")
                        },
                        new
                        {
                            Id = new Guid("f3007be4-d064-40d3-bb07-f22241db0f7c"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3782),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3782),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3782),
                            UserId = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33")
                        },
                        new
                        {
                            Id = new Guid("47c884a9-0c86-4e10-a1f8-a0cd18fdaf51"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3787),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3786),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3787),
                            UserId = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33")
                        },
                        new
                        {
                            Id = new Guid("ad6c8cf8-3a07-4512-907c-b2c0c74c7adf"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3790),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3789),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3790),
                            UserId = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33")
                        },
                        new
                        {
                            Id = new Guid("2e2d80c4-19ea-4b6c-aedf-9b289b89bb14"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3792),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3792),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3793),
                            UserId = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33")
                        },
                        new
                        {
                            Id = new Guid("b8c34d66-7b25-42f9-a956-947f9b5fa4d2"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3795),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3795),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3795),
                            UserId = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33")
                        },
                        new
                        {
                            Id = new Guid("baa1996d-741b-4551-b047-0b391bd4fea0"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3800),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3799),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3800),
                            UserId = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33")
                        },
                        new
                        {
                            Id = new Guid("fe19c737-818d-4e8e-9d24-73fcfe488eb4"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3802),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 1,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3802),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3803),
                            UserId = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33")
                        },
                        new
                        {
                            Id = new Guid("9eb8807e-8ba7-4114-b4ac-0b166242243b"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3805),
                            Description = "Lorem ipsum dolor sit amet.",
                            RecordGroup = 0,
                            RecordedAt = new DateTime(2023, 7, 15, 17, 33, 59, 300, DateTimeKind.Local).AddTicks(3805),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3806),
                            UserId = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33")
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("66f73381-f433-43b9-b3ec-0ddaceb350d5"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(2577),
                            Name = "ROLE_ADMIN",
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(2578)
                        },
                        new
                        {
                            Id = new Guid("bacf9086-da56-4e8b-8d4b-f9681ee57f16"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(2611),
                            Name = "ROLE_USER",
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(2611)
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("full_name");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("password_hash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("password_salt");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("profile_picture");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("refresh_token");

                    b.Property<string>("ResetPasswordToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("reset_password_token");

                    b.Property<DateTime>("ResetTokenExpires")
                        .HasColumnType("datetime2")
                        .HasColumnName("reset_token_expires");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("role_id");

                    b.Property<DateTime>("TokenExpires")
                        .HasColumnType("datetime2")
                        .HasColumnName("token_expires");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("VerificationToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("verification_token");

                    b.Property<DateTime>("VerifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("verified_at");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8edc88ca-9f5f-43da-8673-781c80d24a64"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3526),
                            Email = "admin1@example.com",
                            FullName = "Admin Satu",
                            PasswordHash = new byte[] { 73, 155, 215, 159, 94, 72, 122, 251, 103, 48, 108, 47, 207, 174, 97, 44, 52, 246, 248, 235, 189, 128, 24, 170, 73, 210, 154, 170, 85, 246, 220, 81 },
                            PasswordSalt = new byte[] { 38, 212, 145, 175, 221, 6, 152, 241, 93, 218, 174, 190, 162, 27, 104, 248, 85, 78, 36, 71, 105, 73, 14, 162, 184, 215, 154, 106, 184, 111, 27, 150, 58, 164, 71, 98, 17, 233, 39, 126, 217, 176, 93, 212, 102, 34, 199, 97, 73, 221, 109, 129, 145, 196, 144, 134, 184, 36, 142, 45, 24, 174, 122, 212 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("66f73381-f433-43b9-b3ec-0ddaceb350d5"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3526),
                            VerifiedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3525)
                        },
                        new
                        {
                            Id = new Guid("7d44a5e6-ebdd-4570-a9a0-dfe17eb94a12"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3531),
                            Email = "admin2@example.com",
                            FullName = "Admin Dua",
                            PasswordHash = new byte[] { 73, 155, 215, 159, 94, 72, 122, 251, 103, 48, 108, 47, 207, 174, 97, 44, 52, 246, 248, 235, 189, 128, 24, 170, 73, 210, 154, 170, 85, 246, 220, 81 },
                            PasswordSalt = new byte[] { 38, 212, 145, 175, 221, 6, 152, 241, 93, 218, 174, 190, 162, 27, 104, 248, 85, 78, 36, 71, 105, 73, 14, 162, 184, 215, 154, 106, 184, 111, 27, 150, 58, 164, 71, 98, 17, 233, 39, 126, 217, 176, 93, 212, 102, 34, 199, 97, 73, 221, 109, 129, 145, 196, 144, 134, 184, 36, 142, 45, 24, 174, 122, 212 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("66f73381-f433-43b9-b3ec-0ddaceb350d5"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3531),
                            VerifiedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3531)
                        },
                        new
                        {
                            Id = new Guid("33e8b9a7-e1ce-4121-a273-9f66d538a19d"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3534),
                            Email = "user1@example.com",
                            FullName = "User Satu",
                            PasswordHash = new byte[] { 73, 155, 215, 159, 94, 72, 122, 251, 103, 48, 108, 47, 207, 174, 97, 44, 52, 246, 248, 235, 189, 128, 24, 170, 73, 210, 154, 170, 85, 246, 220, 81 },
                            PasswordSalt = new byte[] { 38, 212, 145, 175, 221, 6, 152, 241, 93, 218, 174, 190, 162, 27, 104, 248, 85, 78, 36, 71, 105, 73, 14, 162, 184, 215, 154, 106, 184, 111, 27, 150, 58, 164, 71, 98, 17, 233, 39, 126, 217, 176, 93, 212, 102, 34, 199, 97, 73, 221, 109, 129, 145, 196, 144, 134, 184, 36, 142, 45, 24, 174, 122, 212 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("bacf9086-da56-4e8b-8d4b-f9681ee57f16"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3534),
                            VerifiedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3533)
                        },
                        new
                        {
                            Id = new Guid("3eedcbf7-0212-4039-b544-6d93e8384b33"),
                            CreatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3536),
                            Email = "user2@example.com",
                            FullName = "User Dua",
                            PasswordHash = new byte[] { 73, 155, 215, 159, 94, 72, 122, 251, 103, 48, 108, 47, 207, 174, 97, 44, 52, 246, 248, 235, 189, 128, 24, 170, 73, 210, 154, 170, 85, 246, 220, 81 },
                            PasswordSalt = new byte[] { 38, 212, 145, 175, 221, 6, 152, 241, 93, 218, 174, 190, 162, 27, 104, 248, 85, 78, 36, 71, 105, 73, 14, 162, 184, 215, 154, 106, 184, 111, 27, 150, 58, 164, 71, 98, 17, 233, 39, 126, 217, 176, 93, 212, 102, 34, 199, 97, 73, 221, 109, 129, 145, 196, 144, 134, 184, 36, 142, 45, 24, 174, 122, 212 },
                            ResetTokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("bacf9086-da56-4e8b-8d4b-f9681ee57f16"),
                            TokenExpires = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3537),
                            VerifiedAt = new DateTime(2023, 7, 15, 10, 33, 59, 300, DateTimeKind.Utc).AddTicks(3536)
                        });
                });

            modelBuilder.Entity("CoreCashApi.Entities.Contact", b =>
                {
                    b.HasOne("CoreCashApi.Entities.User", "User")
                        .WithMany("Contacts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Ledger", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Account", "Account")
                        .WithMany("Ledgers")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithMany("Ledgers")
                        .HasForeignKey("RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Payable", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Contact", "Creditor")
                        .WithMany("Payables")
                        .HasForeignKey("CreditorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithOne("Payable")
                        .HasForeignKey("CoreCashApi.Entities.Payable", "RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creditor");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.PayableLedger", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Payable", "Payable")
                        .WithMany("PayableLedgers")
                        .HasForeignKey("PayableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithOne("PayableLedger")
                        .HasForeignKey("CoreCashApi.Entities.PayableLedger", "RecordId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Payable");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Receivable", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Contact", "Debtor")
                        .WithMany("Receivables")
                        .HasForeignKey("DebtorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithOne("Receivable")
                        .HasForeignKey("CoreCashApi.Entities.Receivable", "RecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Debtor");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.ReceivableLedger", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Receivable", "Receivable")
                        .WithMany("ReceivableLedgers")
                        .HasForeignKey("ReceivableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreCashApi.Entities.Record", "Record")
                        .WithOne("ReceivableLedger")
                        .HasForeignKey("CoreCashApi.Entities.ReceivableLedger", "RecordId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Receivable");

                    b.Navigation("Record");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Record", b =>
                {
                    b.HasOne("CoreCashApi.Entities.User", "User")
                        .WithMany("Records")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoreCashApi.Entities.User", b =>
                {
                    b.HasOne("CoreCashApi.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Account", b =>
                {
                    b.Navigation("Ledgers");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Contact", b =>
                {
                    b.Navigation("Payables");

                    b.Navigation("Receivables");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Payable", b =>
                {
                    b.Navigation("PayableLedgers");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Receivable", b =>
                {
                    b.Navigation("ReceivableLedgers");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Record", b =>
                {
                    b.Navigation("Ledgers");

                    b.Navigation("Payable");

                    b.Navigation("PayableLedger");

                    b.Navigation("Receivable");

                    b.Navigation("ReceivableLedger");
                });

            modelBuilder.Entity("CoreCashApi.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CoreCashApi.Entities.User", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("Records");
                });
#pragma warning restore 612, 618
        }
    }
}
